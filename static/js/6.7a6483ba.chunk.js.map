{"version":3,"sources":["libraries/database.js","images/characters.png","images/world.png","scripts lazy /^/.//.*$/ groupOptions: {} namespace object","maps lazy /^/.//.*/.json$/ groupOptions: {} namespace object","game/Character.js","game/Player.js","game/World.js","game/index.js"],"names":["playerDB","localForage","createInstance","name","CHARACTERS","PLAYER","getEventsDB","storeName","module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","STATES","createCharacter","game","container","x","y","still","face","walk","update","postUpdate","updateNextTile","updatePosition","updateState","updateTextures","addSpriteSheet","a","spriteSheet","Spritesheet","resources","characters","texture","getData","parse","character","textures","stillDown","stillUp","stillLeft","stillRight","walkDown","getTextures","walkUp","walkLeft","walkRight","sprite","AnimatedSprite","state","upperCase","direction","width","SIZE","height","animationSpeed","addChild","play","nextDirection","nextState","dimension","move","speed","SPEED","position","speedX","speedY","nextX","Math","floor","nextY","nextTile","data","world","tileAt","CONTROLS","RIGHT","LEFT","DOWN","UP","event","check","collision","loadingResources","loadResources","database","createPosition","onNextTileUpdate","newEvent","createEvent","newValue","newPosition","app","ticker","add","Loader","load","loader","loadedResources","startX","startY","getItem","positionDB","newX","setItem","newY","key","animations","rotate","frames","meta","frame","getFrame","groupD8","MIRROR_HORIZONTAL","w","h","callback","promise","createPlayer","loadEvent","events","characterUpdateState","player","location","layer","split","setLocation","characterWalk","characterFace","faceTimeout","setTimeout","characterStill","clearTimeout","stage","screen","createWorld","loadMapLocation","loadTile","loadObject","item","tilesets","locationTiles","locationCharacters","locationMap","promises","tileSize","columns","objects","forEach","object","gid","firstgid","tileX","tileY","tiles","properties","reduce","addProperties","addGraphic","push","visible","value","index","parseInt","eventsImport","catch","Container","layers","type","all","getEvents","camera","removeChildren","loadTexture","worldData","tilewidth","acc","tile","enableControls","pivot","newLocation","newLayer","addChildAt","UPDATE_PRIORITY","INTERACTION","worldTexture","graphics","Graphics","beginTextureFill","drawRect","scale","property","createGame","handleAction","detail","action","view","setMessage","save","prepareGame","loadText","window","addEventListener","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","renderer","plugins","accessibility","destroy","accesibility"],"mappings":"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","file":"static/js/6.7a6483ba.chunk.js","sourcesContent":["import localForage from \"localforage\"\nimport { CHARACTERS } from \"./constants\"\n\nexport const playerDB = localForage.createInstance({ name: CHARACTERS.PLAYER })\n\nexport function getEventsDB(storeName) {\n  return localForage.createInstance({ name: \"events\", storeName })\n}","module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","var map = {\n\t\"./PalletTown\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index.js\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./welcome.txt\": [\n\t\t77,\n\t\t7,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 132;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./PalletTown.json\": [\n\t\t134,\n\t\t7\n\t],\n\t\"./PalletTownRooms.json\": [\n\t\t135,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 133;\nmodule.exports = webpackAsyncContext;","import { Spritesheet, AnimatedSprite, Loader, groupD8 } from \"pixi.js\"\nimport localForage from \"localforage\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\n\nconst TILE_SIZE = 16\nconst COLUMNS = 8\nconst ROTATE = \"rotate\"\n\nexport const STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nexport async function createCharacter(game, id, container, x, y) {\n  if (!resources && !loadingResources) {\n    loadingResources = await loadResources()\n  }\n\n  const database = localForage.createInstance({ name: id })\n  const position = await createPosition(database, x, y)\n\n  const character = {\n    database,\n    game,\n    still,\n    face,\n    walk,\n    updateState,\n    postUpdate,\n    onNextTileUpdate: () => { },\n    get event() {\n      return event\n    },\n    set event(newEvent) {\n      event = createEvent(newEvent)\n    },\n    sprite: null,\n    state: STATES.STILL,\n    direction: CONTROLS.DOWN,\n    speed: { x: 0, y: 0 },\n    nextDirection: null,\n    nextState: null,\n    get nextTile() {\n      return nextTile\n    },\n    set nextTile(newValue) {\n      nextTile = newValue\n      character.onNextTileUpdate(newValue)\n    },\n    get position() {\n      return position\n    },\n    set position(newPosition) {\n      position.x = newPosition.x\n      position.y = newPosition.y\n    },\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    character.nextState = STATES.STILL\n  }\n\n  function face(direction) {\n    character.nextDirection = direction\n  }\n\n  function walk(direction) {\n    face(direction)\n    character.nextState = STATES.WALK\n  }\n\n  function update() {\n    const speedX = character.direction === CONTROLS.RIGHT ? 1 : character.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = character.direction === CONTROLS.DOWN ? 1 : character.direction === CONTROLS.UP ? -1 : 0\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y) updateNextTile(speedX, speedY)\n\n    if (event && event.check()) {\n      event = null\n    }\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y && character.nextTile.data.collision === false) {\n      character.speed.x = speedX\n      character.speed.y = speedY\n      updatePosition(character.speed.x ? \"x\" : \"y\", true)\n    } else if (character.speed.x || character.speed.y) {\n      updatePosition(character.speed.x ? \"x\" : \"y\")\n    } else {\n      updateState()\n    }\n\n    updateTextures()\n    character.postUpdate()\n  }\n\n  function postUpdate() {\n    character.sprite.x = position.x\n    character.sprite.y = position.y\n  }\n\n  function updateNextTile(speedX, speedY) {\n    const nextX = Math.floor(position.x / SIZE + speedX)\n    const nextY = Math.floor(position.y / SIZE + speedY)\n\n    if (character.nextTile.x === nextX && character.nextTile.y === nextY) return\n\n    const data = character.game.world.tileAt(nextX, nextY)\n\n    character.nextTile = {\n      x: nextX,\n      y: nextY,\n      data,\n    }\n  }\n\n  function updatePosition(dimension, move) {\n    if (!character.speed[dimension]) return\n\n    const speed = character.speed[dimension] * SPEED\n    const remainder = position[dimension] % SIZE\n\n    if (remainder || move) {\n      position[dimension] += speed\n    } else {\n      character.speed[dimension] = 0\n      character.updateState()\n    }\n  }\n\n  function updateState() {\n    if (character.nextDirection) {\n      character.direction = character.nextDirection\n      character.nextDirection = null\n    }\n    if (character.nextState) {\n      character.state = character.nextState\n      character.nextState = null\n    }\n  }\n\n  function updateTextures() {\n    if (!character.sprite) return\n    const textures = character.textures[character.state + upperCase(character.direction)]\n    if (!textures || character.sprite.textures === textures) return\n    character.sprite.textures = textures\n    character.sprite.play()\n  }\n\n  function addSpriteSheet() {\n    const spriteSheet = new Spritesheet(resources.characters.texture, getData(id))\n\n    spriteSheet.parse(() => {\n      character.textures.stillDown = [spriteSheet.textures[\"stillDown\" + id]]\n      character.textures.stillUp = [spriteSheet.textures[\"stillUp\" + id]]\n      character.textures.stillLeft = [spriteSheet.textures[\"stillLeft\" + id]]\n      character.textures.stillRight = [spriteSheet.textures[\"stillRight\" + id]]\n\n      character.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n      character.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n      character.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n      character.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n      const sprite = new AnimatedSprite(character.textures[character.state + upperCase(character.direction)])\n      character.sprite = sprite\n\n      sprite.width = SIZE\n      sprite.height = SIZE\n      sprite.animationSpeed = 0.1\n      sprite.x = x\n      sprite.y = y\n\n      container.addChild(sprite)\n    })\n  }\n\n  let event = null\n  let nextTile = { data: {} }\n\n  addSpriteSheet()\n\n  character.game.app.ticker.add(update)\n\n  return character\n}\n\nasync function loadResources() {\n  return new Promise(resolve => {\n    new Loader().add(\"characters\", texture).load((loader, loadedResources) => {\n      resources = loadedResources\n      resolve()\n    })\n  })\n}\n\nasync function createPosition(database, startX, startY) {\n  const positionDB = await await database.getItem(\"position\")\n  let x = positionDB?.x ?? startX\n  let y = positionDB?.y ?? startY\n\n  const position = {\n    get x() {\n      return x\n    },\n    set x(newX) {\n      x = newX\n      database.setItem(\"position\", { ...position, x })\n    },\n    get y() {\n      return y\n    },\n    set y(newY) {\n      y = newY\n      database.setItem(\"position\", { ...position, y })\n    }\n  }\n\n  return position\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nfunction getData(id) {\n  return {\n    meta: {},\n    frames: {\n      [\"stillDown\" + id]: {\n        frame: getFrame(id),\n      },\n      [\"stillUp\" + id]: {\n        frame: getFrame(id + 1),\n      },\n      [\"stillLeft\" + id]: {\n        frame: getFrame(id + 2),\n      },\n      [\"stillRight\" + id]: {\n        frame: getFrame(id + 2),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkDown0\" + id]: {\n        frame: getFrame(id + 3)\n      },\n      [\"walkDown1\" + id]: {\n        frame: getFrame(id + 3),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkUp0\" + id]: {\n        frame: getFrame(id + 4),\n      },\n      [\"walkUp1\" + id]: {\n        frame: getFrame(id + 4),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkLeft\" + id]: {\n        frame: getFrame(id + 5),\n      },\n\n      [\"walkRight\" + id]: {\n        frame: getFrame(id + 5),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n    },\n\n    animations: {\n      walkDown: [\"walkDown0\" + id, \"stillDown\" + id, \"walkDown1\" + id, \"stillDown\" + id],\n      walkUp: [\"walkUp0\" + id, \"stillUp\" + id, \"walkUp1\" + id, \"stillUp\" + id],\n      walkLeft: [\"walkLeft\" + id, \"stillLeft\" + id],\n      walkRight: [\"walkRight\" + id, \"stillRight\" + id],\n    },\n  }\n}\n\nfunction getFrame(id) {\n  return {\n    x: (id % COLUMNS) * TILE_SIZE,\n    y: (Math.floor(id / COLUMNS)) * TILE_SIZE,\n    w: TILE_SIZE,\n    h: TILE_SIZE,\n  }\n}\n\nfunction createEvent(callback) {\n  let resolve = null\n\n  const event = {\n    check,\n    promise: new Promise(callback => {\n      resolve = callback\n    }),\n  }\n\n  function check() {\n    if (callback()) {\n      resolve()\n      return true\n    }\n  }\n\n  return event\n}\n\nlet resources = null\nlet loadingResources = null","import { SIZE, CHARACTERS } from \"libraries/constants\"\nimport { createCharacter, STATES } from \"./Character\"\n\nexport async function createPlayer(game) {\n  const player = await createCharacter(\n    game,\n    CHARACTERS.PLAYER,\n    game.app.stage,\n    game.app.screen.width / 2 - SIZE / 2,\n    game.app.screen.height / 2 - SIZE / 2,\n  )\n\n  function still() {\n    characterStill()\n    clearTimeout(faceTimeout)\n  }\n\n  function face(direction) {\n    characterFace(direction)\n    faceTimeout = setTimeout(() => walk(direction), 50)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) face(direction)\n    else characterWalk(direction)\n  }\n\n  function updateState() {\n    characterUpdateState()\n\n    const { data } = player.nextTile\n    if (data.location || data.layer) {\n      const [x, y] = data.position.split(\",\")\n      game.world.setLocation(data.location, data.layer, { x: x * SIZE, y: y * SIZE })\n    }\n  }\n\n  function loadEvent({ data }) {\n    if (data.event) {\n      game.world.events[data.event]()\n    }\n  }\n\n  const {\n    walk: characterWalk,\n    face: characterFace,\n    still: characterStill,\n    updateState: characterUpdateState,\n  } = player\n\n  player.still = still\n  player.face = face\n  player.walk = walk\n  player.updateState = updateState\n  player.postUpdate = () => { }\n  player.onNextTileUpdate = loadEvent\n\n  let faceTimeout = null\n\n  return player\n}","import { Graphics, Loader, Container, UPDATE_PRIORITY } from \"pixi.js\"\nimport worldTexture from \"images/world.png\"\nimport worldData from \"images/data/world.json\"\nimport { SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { createCharacter } from \"./Character\"\n\nexport async function createWorld(game) {\n  const world = {\n    game,\n    update,\n    tileAt,\n    setLocation,\n    load,\n    events: null,\n    get location() {\n      return location\n    },\n    set location(newLocation) {\n      location = newLocation\n      playerDB.setItem(\"location\", newLocation)\n    },\n    get layer() {\n      return layer\n    },\n    set layer(newLayer) {\n      layer = newLayer\n      playerDB.setItem(\"layer\", newLayer)\n    },\n    texture: null,\n    data: null,\n    map: {},\n    tiles: {},\n    characters: {},\n    camera: new Container(),\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  function setLocation(location, layer, position) {\n    world.location = location || world.location\n    world.layer = layer || \"index\"\n    playerDB.setItem(\"location\", world.location)\n    playerDB.setItem(\"layer\", world.layer)\n    loadMapLocation(position)\n  }\n\n  async function load() {\n    const texture = await loadTexture()\n    world.texture = texture\n    world.data = {\n      tileSize: worldData.tilewidth,\n      columns: worldData.columns,\n      tiles: worldData.tiles.reduce((acc, tile) => {\n        acc[tile.id] = tile.properties.reduce(addProperties, {})\n        return acc\n      }, {})\n    }\n    await loadMapLocation()\n    world.game.enableControls = true\n  }\n\n  async function loadMapLocation(position) {\n    const eventsImport = import(`scripts/${world.location}/${world.layer}`).catch(() => ({}))\n\n    const { location, layer } = world\n    let locationMap = world.map[location + layer]\n    let locationCharacters = world.characters[location + layer]\n\n    if (!locationMap) {\n      const locationTiles = {}\n      locationMap = new Container()\n      locationCharacters = {}\n\n      const { layers, tilesets, width } = await import(`maps/${location}.json`)\n      const promises = []\n\n      layers.forEach(item => {\n        if (item.name !== layer) return\n\n        if (item.type === \"tilelayer\") loadTile({ item, tilesets, locationTiles, locationMap, width })\n\n        if (item.type === \"objectgroup\") loadObject({ item, tilesets, locationTiles, locationCharacters, locationMap, promises })\n      })\n\n      await Promise.all(promises)\n\n      world.map[location + layer] = locationMap\n      world.tiles[location + layer] = locationTiles\n      world.characters[location + layer] = locationCharacters\n    }\n\n    const { getEvents } = await eventsImport\n\n    world.events = getEvents ? getEvents(game) : null\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n    world.game.characters = locationCharacters\n    if (position) world.game.player.position = position\n  }\n\n  function tileAt(x, y) {\n    if (!world.tiles[location + layer]) return {}\n    return world.tiles[location + layer][`${x}-${y}`] || {}\n  }\n\n\n  function loadTile({ item, tilesets, locationTiles, locationMap, width }) {\n    const { tileSize, columns } = world.data\n\n    item.data.forEach((value, index) => {\n      if (!value) return\n      const id = parseInt(value, 10) - tilesets[0].firstgid\n      const object = world.data.tiles[id] || {}\n      const x = (index % width)\n      const y = Math.floor(index / width)\n      const tileX = (id % columns) * tileSize\n      const tileY = Math.floor(id / columns) * tileSize\n\n      locationTiles[`${x}-${y}`] = object\n\n      addGraphic({\n        texture: world.texture,\n        map: locationMap,\n        tileX,\n        tileY,\n        x,\n        y,\n        tileSize,\n      })\n    })\n  }\n\n  function loadObject({ item, tilesets, locationTiles, locationCharacters, locationMap, promises }) {\n    const { tileSize, columns } = world.data\n\n    item.objects.forEach(async object => {\n      const { gid } = object\n      if (!tilesets[1] || gid < tilesets[1].firstgid) {\n        const id = gid - tilesets[0].firstgid\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n        const x = object.x / tileSize\n        const y = object.y / tileSize - 1\n\n        locationTiles[`${x}-${y}`] = { ...(world.data.tiles[id] || {}), ...object.properties.reduce(addProperties, {}) }\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x,\n          y,\n          tileSize,\n        })\n      } else {\n        const id = gid - tilesets[1].firstgid\n        const promise = createCharacter(world.game, id, locationMap, SIZE * object.x / tileSize, SIZE * (object.y / tileSize - 1))\n        promises.push(promise)\n\n        const properties = object.properties ? object.properties.reduce(addProperties, {}) : {}\n\n        const character = await promise\n        character.sprite.visible = properties.visible !== false\n\n        locationCharacters[id] = character\n      }\n    })\n  }\n\n  game.app.stage.addChildAt(world.camera, 0)\n\n  game.app.ticker.add(update, null, UPDATE_PRIORITY.INTERACTION)\n\n  let location = null\n  let layer = null\n\n  return world\n}\n\nfunction loadTexture() {\n  return new Promise(resolve => {\n    new Loader().add(\"world\", worldTexture).load((loader, resources) => {\n      resolve(resources.world.texture)\n    })\n  })\n}\n\nfunction addGraphic({ texture, map, tileX, tileY, x, y, tileSize }) {\n  const graphics = new Graphics()\n\n  graphics.beginTextureFill({ texture })\n  graphics.drawRect(tileX, tileY, tileSize, tileSize)\n\n  graphics.width = SIZE\n  graphics.height = SIZE\n\n  graphics.x = -tileX * graphics.scale.x + x * SIZE\n  graphics.y = -tileY * graphics.scale.y + y * SIZE\n\n  map.addChild(graphics)\n}\n\nfunction addProperties(acc, property) {\n  acc[property.name] = property.value\n  return acc\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS, SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { loadText } from \"libraries/util\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nexport async function createGame({ view, setMessage }) {\n  const game = {\n    setMessage,\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n    characters: {},\n    enableControls: false,\n  }\n\n  function handleAction({ detail }) {\n    if (!game.enableControls) {\n      game.action = null\n    } else {\n      game.action = detail\n    }\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  const save = {\n    position: await playerDB.getItem(\"position\"),\n    location: await playerDB.getItem(\"location\"),\n    layer: await playerDB.getItem(\"layer\"),\n  }\n\n  await prepareGame(game, view)\n\n  if (!save.position) {\n    loadText(\"welcome\", setMessage)\n    game.player.position = { x: SIZE * 3, y: SIZE * 6 }\n    game.world.location = \"PalletTownRooms\"\n    game.world.layer = \"house1 f2\"\n  } else {\n    game.world.location = save.location\n    game.world.layer = save.layer\n  }\n\n  game.world.load()\n\n  window.addEventListener(\"action\", handleAction)\n}\n\nasync function prepareGame(game, view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.app.renderer.plugins.accessibility.destroy()\n  delete game.app.renderer.plugins.accesibility\n\n  game.player = await createPlayer(game)\n  game.world = await createWorld(game)\n}"],"sourceRoot":""}