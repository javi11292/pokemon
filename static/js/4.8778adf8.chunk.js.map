{"version":3,"sources":["images/characters.png","images/world.png","images/data/world.xml","maps lazy /^/.//.*/.xml$/ groupOptions: {} namespace object","images/data/player.js","game/Player.js","game/World.js","game/index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","meta","frames","stillDown","frame","x","SIZE","y","w","h","walkDown0","walkDown1","groupD8","MIRROR_HORIZONTAL","stillUp","walkUp0","walkUp1","stillLeft","walkLeft","stillRight","walkRight","animations","walkDown","walkUp","STATES","getTextures","spriteSheet","key","data","texture","textures","rotate","createPlayer","game","player","update","speedX","direction","CONTROLS","RIGHT","LEFT","speedY","DOWN","UP","state","speed","nextX","Math","floor","position","nextY","nextTile","world","tileAt","setNextTileData","collision","updatePosition","updateState","sprite","upperCase","play","setTextures","still","walk","nextDirection","nextState","setTimeout","action","face","dimension","move","SPEED","remainder","abs","offset","normalizedOffset","location","layer","split","setLocation","Loader","add","load","loader","resources","Spritesheet","characters","parse","AnimatedSprite","width","height","animationSpeed","app","screen","stage","addChild","loadTexture","worldTexture","addGraphic","tileX","tileY","object","tileSize","graphics","Graphics","name","beginTextureFill","drawRect","scale","createGame","view","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","enableControls","Application","camera","pivot","children","length","getChildAt","getChildByName","loadMapLocation","Container","a","all","parseData","worldData","locationMap","url","default","parseMap","layers","columns","value","objects","forEach","row","i","j","parseInt","removeChildren","addChildAt","createWorld","window","addEventListener","detail","ticker"],"mappings":"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","file":"static/js/4.8778adf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","module.exports = __webpack_public_path__ + \"static/media/world.db6fb586.xml\";","var map = {\n\t\"./PalletTown.xml\": [\n\t\t136,\n\t\t5\n\t],\n\t\"./PalletTownRooms.xml\": [\n\t\t137,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 135;\nmodule.exports = webpackAsyncContext;","import { groupD8 } from \"pixi.js\"\n\nconst SIZE = 16\nconst ROTATE = \"rotate\"\n\nexport default {\n  meta: {},\n  frames: {\n    stillDown: {\n      frame: {\n        x: SIZE * 6,\n        y: SIZE * 14,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkDown0: {\n      frame: {\n        x: SIZE * 1,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkDown1: {\n      frame: {\n        x: SIZE * 1,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n\n    stillUp: {\n      frame: {\n        x: SIZE * 7,\n        y: SIZE * 14,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkUp0: {\n      frame: {\n        x: SIZE * 2,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkUp1: {\n      frame: {\n        x: SIZE * 2,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n\n\n    stillLeft: {\n      frame: {\n        x: SIZE * 0,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkLeft: {\n      frame: {\n        x: SIZE * 3,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n\n    stillRight: {\n      frame: {\n        x: SIZE * 0,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n    walkRight: {\n      frame: {\n        x: SIZE * 3,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n  },\n  animations: {\n    walkDown: [\"walkDown0\", \"stillDown\", \"walkDown1\", \"stillDown\"],\n    walkUp: [\"walkUp0\", \"stillUp\", \"walkUp1\", \"stillUp\"],\n    walkLeft: [\"walkLeft\", \"stillLeft\"],\n    walkRight: [\"walkRight\", \"stillRight\"],\n  },\n}","import { Spritesheet, AnimatedSprite, Loader } from \"pixi.js\"\nimport data from \"images/data/player\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\n\nconst STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nexport function createPlayer(game) {\n  const player = {\n    game,\n    update,\n    still,\n    walk,\n    sprite: null,\n    state: null,\n    direction: CONTROLS.DOWN,\n    nextDirection: null,\n    nextState: null,\n    position: { x: SIZE * 3, y: SIZE * 7 },\n    speed: { x: 0, y: 0 },\n    nextTile: { data: {} },\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    player.nextState = STATES.STILL\n  }\n\n  function face(direction) {\n    setTimeout(() => {\n      player.direction = direction\n      if (direction === player.game.action) walk(direction)\n      else still()\n    }, 100)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) {\n      face(direction)\n      return\n    }\n\n    player.nextDirection = direction\n    player.state = STATES.WALK\n  }\n\n  function setTextures() {\n    if (!player.sprite) return\n    const textures = player.textures[player.state + upperCase(player.direction)]\n    if (!textures || player.sprite.textures === textures) return\n    player.sprite.textures = textures\n    player.sprite.play()\n  }\n\n  function updateState() {\n    if (player.nextDirection) {\n      player.direction = player.nextDirection\n      player.nextDirection = null\n    }\n    if(player.nextState){\n      player.state = player.nextState\n      player.nextState = null\n    }\n  }\n\n  function updatePosition(dimension, move) {\n    if (!player.speed[dimension]) return\n\n    const speed = player.speed[dimension] * SPEED\n    const remainder = Math.abs(player.position[dimension] % SIZE)\n\n    const offset = remainder && (player.speed[dimension] === 1 ? remainder : SIZE - remainder)\n\n    if (remainder) {\n      const normalizedOffset = player.position[dimension] <= 0 ? offset : SIZE - offset\n      player.position[dimension] += normalizedOffset >= SPEED ? speed : normalizedOffset * player.speed[dimension]\n    } else if (move) {\n      player.position[dimension] += speed\n    } else {\n      player.speed[dimension] = 0\n      updateState()\n      const { data } = player.nextTile\n      if (data.location || data.layer) {\n        const [x, y] = data.position.split(\",\")\n        player.game.world.setLocation(data.location, data.layer, { x: x * SIZE, y: y * SIZE + SIZE })\n      }\n    }\n  }\n\n  function setNextTileData(speedX, speedY) {\n    const nextX = Math.floor(player.position.x / SIZE + speedX)\n    const nextY = Math.floor(player.position.y / SIZE + speedY)\n\n    if (player.nextTile.x === nextX && player.nextTile.y === nextY) return\n\n    player.nextTile = {\n      x: nextX,\n      y: nextY,\n      data: player.game.world.tileAt(nextX, nextY),\n    }\n  }\n\n  function update() {\n    const speedX = player.direction === CONTROLS.RIGHT ? 1 : player.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = player.direction === CONTROLS.DOWN ? 1 : player.direction === CONTROLS.UP ? -1 : 0\n\n    if (player.state === STATES.WALK && !player.speed.x && !player.speed.y) setNextTileData(speedX, speedY)\n\n    if (player.state === STATES.WALK && !player.speed.x && !player.speed.y && player.nextTile.data.collision === \"false\") {\n      player.speed.x = speedX\n      player.speed.y = speedY\n      updatePosition(player.speed.x ? \"x\" : \"y\", true)\n    } else if (player.speed.x || player.speed.y) {\n      updatePosition(player.speed.x ? \"x\" : \"y\")\n    } else {\n      updateState()\n    }\n\n    setTextures()\n  }\n\n  function addSpriteSheet() {\n    new Loader().add(\"characters\", texture).load((loader, resources) => {\n      const spriteSheet = new Spritesheet(resources.characters.texture, data)\n\n      spriteSheet.parse(() => {\n        player.textures.stillDown = [spriteSheet.textures.stillDown]\n        player.textures.stillUp = [spriteSheet.textures.stillUp]\n        player.textures.stillLeft = [spriteSheet.textures.stillLeft]\n        player.textures.stillRight = [spriteSheet.textures.stillRight]\n\n        player.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n        player.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n        player.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n        player.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n        const sprite = new AnimatedSprite(player.textures[`still${upperCase(player.direction)}`])\n\n        sprite.width = SIZE\n        sprite.height = SIZE\n        sprite.animationSpeed = 0.1\n        sprite.x = player.game.app.screen.width / 2 - sprite.width / 2\n        sprite.y = player.game.app.screen.height / 2 - sprite.height / 2\n        player.sprite = sprite\n\n        player.game.app.stage.addChild(sprite)\n      })\n    })\n  }\n\n  addSpriteSheet()\n\n  return player\n}","import { Graphics, Loader, Container } from \"pixi.js\"\nimport worldTexture from \"images/world.png\"\nimport worldData from \"images/data/world.xml\"\nimport { SIZE } from \"libraries/constants\"\nimport { parseData, parseMap } from \"libraries/util\"\n\nfunction loadTexture() {\n  return new Promise(resolve => {\n    new Loader().add(\"world\", worldTexture).load((loader, resources) => {\n      resolve(resources.world.texture)\n    })\n  })\n}\n\nfunction addGraphic({ texture, map, tileX, tileY, x, y, object, tileSize }) {\n  const graphics = new Graphics()\n  graphics.name = `${x}-${y}`\n  graphics.data = object\n\n  graphics.beginTextureFill({ texture })\n  graphics.drawRect(tileX, tileY, tileSize, tileSize)\n\n  graphics.width = SIZE\n  graphics.height = SIZE\n\n  graphics.x = -tileX * graphics.scale.x + x * SIZE\n  graphics.y = -tileY * graphics.scale.y + y * SIZE\n\n  map.addChild(graphics)\n}\n\nexport function createWorld(game) {\n  const world = {\n    game,\n    update,\n    tileAt,\n    setLocation,\n    location: \"PalletTownRooms\",\n    layer: \"house1 f2\",\n    texture: null,\n    data: null,\n    map: {},\n    camera: new Container(),\n  }\n\n  function setLocation(location, layer, position) {\n    world.location = location || world.location\n    world.layer = layer\n    loadMapLocation(position)\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  async function load() {\n    const [texture, data] = await Promise.all([loadTexture(), parseData(worldData)])\n    world.texture = texture\n    world.data = data\n    await loadMapLocation()\n    world.game.enableControls = true\n  }\n\n  async function loadMapLocation(position) {\n    const { location } = world\n    const layer = world.layer || \"index\"\n    let locationMap = world.map[location + layer]\n\n    if (!locationMap) {\n      locationMap = new Container()\n      const { default: url } = await import(`maps/${location}.xml`)\n      const layers = await parseMap(url)\n      const { tileSize, columns } = world.data\n      const { value: map, objects } = layers[layer]\n\n      map.split(\"\\n\").forEach((row, i) => row.split(\",\").forEach((value, j) => {\n        if (!value || value === \"0\") return\n        const id = parseInt(value, 10) - 1\n        const object = world.data[id] || {}\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x: j,\n          y: i,\n          tileSize,\n          object,\n        })\n      }))\n\n      objects.forEach(object => {\n        const id = parseInt(object.id, 10) - 1\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x: object.x / tileSize,\n          y: object.y / tileSize,\n          tileSize,\n          object: { ...(world.data[id] || {}), ...object },\n        })\n      })\n\n      world.map[location + layer] = locationMap\n    }\n\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n    if (position) world.game.player.position = position\n  }\n\n  function tileAt(x, y) {\n    if (!world.camera.children.length) return {}\n    return world.camera.getChildAt(0).getChildByName(`${x}-${y}`)?.data || {}\n  }\n\n  load()\n  game.app.stage.addChildAt(world.camera, 0)\n\n  return world\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS } from \"libraries/constants\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nexport function createGame(view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  const game = {\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n    enableControls: false,\n  }\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.player = createPlayer(game)\n  game.world = createWorld(game)\n\n  function handleAction({ detail }) {\n    if (!game.enableControls) return\n    game.action = detail\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  window.addEventListener(\"action\", handleAction)\n\n  game.app.ticker.add(() => {\n    game.player.update()\n    game.world.update()\n  })\n}"],"sourceRoot":""}