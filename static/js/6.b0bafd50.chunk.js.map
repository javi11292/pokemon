{"version":3,"sources":["libraries/database.js","images/characters.png","images/world.png","scripts lazy /^/.//.*$/ groupOptions: {} namespace object","maps lazy /^/.//.*/.json$/ groupOptions: {} namespace object","game/Character.js","game/Player.js","game/World.js","game/index.js"],"names":["playerDB","localForage","createInstance","name","CHARACTERS","PLAYER","getEventsDB","storeName","module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","STATES","createCharacter","game","container","x","y","still","face","walk","update","postUpdate","updateNextTile","updatePosition","updateState","updateTextures","addSpriteSheet","loadEvent","a","world","events","character","spriteSheet","Spritesheet","resources","characters","texture","getData","parse","textures","stillDown","stillUp","stillLeft","stillRight","walkDown","getTextures","walkUp","walkLeft","walkRight","sprite","AnimatedSprite","state","upperCase","direction","width","SIZE","height","animationSpeed","addChild","play","nextDirection","nextState","dimension","move","speed","SPEED","position","speedX","speedY","nextX","Math","floor","nextY","nextTile","data","tileAt","event","toString","CONTROLS","RIGHT","LEFT","DOWN","UP","collision","loadingResources","loadResources","database","createPosition","newPosition","app","ticker","add","Loader","load","loader","loadedResources","startX","startY","getItem","positionDB","newX","setItem","newY","key","animations","rotate","frames","meta","frame","getFrame","groupD8","MIRROR_HORIZONTAL","w","h","createPlayer","characterUpdateState","player","location","layer","split","setLocation","characterWalk","characterFace","faceTimeout","setTimeout","characterStill","clearTimeout","stage","screen","createWorld","loadMapLocation","loadTile","loadObject","item","tilesets","locationTiles","locationCharacters","locationMap","promises","tileSize","columns","objects","forEach","object","gid","firstgid","tileX","tileY","tiles","properties","reduce","addProperties","addGraphic","promise","push","visible","value","index","parseInt","eventsImport","catch","default","Container","layers","type","all","camera","removeChildren","loadTexture","worldData","tilewidth","acc","tile","enableControls","pivot","newLocation","newLayer","addChildAt","UPDATE_PRIORITY","INTERACTION","worldTexture","graphics","Graphics","beginTextureFill","drawRect","scale","property","createGame","handleAction","detail","action","view","setMessage","save","prepareGame","loadText","window","addEventListener","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","renderer","plugins","accessibility","destroy","accesibility"],"mappings":"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","file":"static/js/6.b0bafd50.chunk.js","sourcesContent":["import localForage from \"localforage\"\nimport { CHARACTERS } from \"./constants\"\n\nexport const playerDB = localForage.createInstance({ name: CHARACTERS.PLAYER })\n\nexport function getEventsDB(storeName) {\n  return localForage.createInstance({ name: \"events\", storeName })\n}","module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","var map = {\n\t\"./PalletTown\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index.js\": [\n\t\t107,\n\t\t9,\n\t\t0\n\t],\n\t\"./welcome.txt\": [\n\t\t77,\n\t\t7,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 132;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./PalletTown.json\": [\n\t\t134,\n\t\t7\n\t],\n\t\"./PalletTownRooms.json\": [\n\t\t135,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 133;\nmodule.exports = webpackAsyncContext;","import { Spritesheet, AnimatedSprite, Loader, groupD8 } from \"pixi.js\"\nimport localForage from \"localforage\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\n\nconst TILE_SIZE = 16\nconst COLUMNS = 8\nconst ROTATE = \"rotate\"\n\nexport const STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nexport async function createCharacter(game, id, container, x, y) {\n  if (!resources && !loadingResources) {\n    loadingResources = await loadResources()\n  }\n\n  const database = localForage.createInstance({ name: id })\n  const position = await createPosition(database, x, y)\n\n  const character = {\n    database,\n    game,\n    still,\n    face,\n    walk,\n    updateState,\n    postUpdate,\n    sprite: null,\n    state: STATES.STILL,\n    direction: CONTROLS.DOWN,\n    speed: { x: 0, y: 0 },\n    nextDirection: null,\n    nextState: null,\n    nextTile: { data: {} },\n    get position() {\n      return position\n    },\n    set position(newPosition) {\n      position.x = newPosition.x\n      position.y = newPosition.y\n    },\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    character.nextState = STATES.STILL\n  }\n\n  function face(direction) {\n    character.nextDirection = direction\n  }\n\n  function walk(direction) {\n    face(direction)\n    character.nextState = STATES.WALK\n  }\n\n  async function update() {\n    const speedX = character.direction === CONTROLS.RIGHT ? 1 : character.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = character.direction === CONTROLS.DOWN ? 1 : character.direction === CONTROLS.UP ? -1 : 0\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y) await updateNextTile(speedX, speedY)\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y && character.nextTile.data.collision === false) {\n      character.speed.x = speedX\n      character.speed.y = speedY\n      updatePosition(character.speed.x ? \"x\" : \"y\", true)\n    } else if (character.speed.x || character.speed.y) {\n      updatePosition(character.speed.x ? \"x\" : \"y\")\n    } else {\n      updateState()\n    }\n\n    updateTextures()\n    character.postUpdate && character.postUpdate()\n  }\n\n  function postUpdate() {\n    character.sprite.x = position.x\n    character.sprite.y = position.y\n  }\n\n  async function updateNextTile(speedX, speedY) {\n    const nextX = Math.floor(position.x / SIZE + speedX)\n    const nextY = Math.floor(position.y / SIZE + speedY)\n\n    if (character.nextTile.x === nextX && character.nextTile.y === nextY) return\n\n    const data = character.game.world.tileAt(nextX, nextY)\n\n    character.nextTile = {\n      x: nextX,\n      y: nextY,\n      data,\n    }\n\n    if (data.event === id.toString()) await loadEvent(nextX, nextY)\n  }\n\n  function updatePosition(dimension, move) {\n    if (!character.speed[dimension]) return\n\n    const speed = character.speed[dimension] * SPEED\n    const remainder = position[dimension] % SIZE\n\n    if (remainder || move) {\n      position[dimension] += speed\n    } else {\n      character.speed[dimension] = 0\n      character.updateState()\n    }\n  }\n\n  function updateState() {\n    if (character.nextDirection) {\n      character.direction = character.nextDirection\n      character.nextDirection = null\n    }\n    if (character.nextState) {\n      character.state = character.nextState\n      character.nextState = null\n    }\n  }\n\n  function updateTextures() {\n    if (!character.sprite) return\n    const textures = character.textures[character.state + upperCase(character.direction)]\n    if (!textures || character.sprite.textures === textures) return\n    character.sprite.textures = textures\n    character.sprite.play()\n  }\n\n  function addSpriteSheet() {\n    const spriteSheet = new Spritesheet(resources.characters.texture, getData(id))\n\n    spriteSheet.parse(() => {\n      character.textures.stillDown = [spriteSheet.textures[\"stillDown\" + id]]\n      character.textures.stillUp = [spriteSheet.textures[\"stillUp\" + id]]\n      character.textures.stillLeft = [spriteSheet.textures[\"stillLeft\" + id]]\n      character.textures.stillRight = [spriteSheet.textures[\"stillRight\" + id]]\n\n      character.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n      character.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n      character.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n      character.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n      const sprite = new AnimatedSprite(character.textures[character.state + upperCase(character.direction)])\n\n      sprite.width = SIZE\n      sprite.height = SIZE\n      sprite.animationSpeed = 0.1\n      sprite.x = x\n      sprite.y = y\n      character.sprite = sprite\n\n      container.addChild(sprite)\n    })\n  }\n\n  async function loadEvent(x, y) {\n    await game.world.events[id][`${x}-${y}`](character.game)\n  }\n\n  addSpriteSheet()\n\n  character.game.app.ticker.add(update)\n\n  return character\n}\n\nasync function loadResources() {\n  return new Promise(resolve => {\n    new Loader().add(\"characters\", texture).load((loader, loadedResources) => {\n      resources = loadedResources\n      resolve()\n    })\n  })\n}\n\nasync function createPosition(database, startX, startY) {\n  const positionDB = await await database.getItem(\"position\")\n  let x = positionDB?.x || startX\n  let y = positionDB?.y || startY\n\n  const position = {\n    get x() {\n      return x\n    },\n    set x(newX) {\n      x = newX\n      database.setItem(\"position\", { ...position, x })\n    },\n    get y() {\n      return y\n    },\n    set y(newY) {\n      y = newY\n      database.setItem(\"position\", { ...position, y })\n    }\n  }\n\n  return position\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nfunction getData(id) {\n  return {\n    meta: {},\n    frames: {\n      [\"stillDown\" + id]: {\n        frame: getFrame(id),\n      },\n      [\"stillUp\" + id]: {\n        frame: getFrame(id + 1),\n      },\n      [\"stillLeft\" + id]: {\n        frame: getFrame(id + 2),\n      },\n      [\"stillRight\" + id]: {\n        frame: getFrame(id + 2),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkDown0\" + id]: {\n        frame: getFrame(id + 3)\n      },\n      [\"walkDown1\" + id]: {\n        frame: getFrame(id + 3),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkUp0\" + id]: {\n        frame: getFrame(id + 4),\n      },\n      [\"walkUp1\" + id]: {\n        frame: getFrame(id + 4),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkLeft\" + id]: {\n        frame: getFrame(id + 5),\n      },\n\n      [\"walkRight\" + id]: {\n        frame: getFrame(id + 5),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n    },\n\n    animations: {\n      walkDown: [\"walkDown0\" + id, \"stillDown\" + id, \"walkDown1\" + id, \"stillDown\" + id],\n      walkUp: [\"walkUp0\" + id, \"stillUp\" + id, \"walkUp1\" + id, \"stillUp\" + id],\n      walkLeft: [\"walkLeft\" + id, \"stillLeft\" + id],\n      walkRight: [\"walkRight\" + id, \"stillRight\" + id],\n    },\n  }\n}\n\nfunction getFrame(id) {\n  return {\n    x: (id % COLUMNS) * TILE_SIZE,\n    y: (Math.floor(id / COLUMNS)) * TILE_SIZE,\n    w: TILE_SIZE,\n    h: TILE_SIZE,\n  }\n}\n\nlet resources = null\nlet loadingResources = null","import { SIZE, CHARACTERS } from \"libraries/constants\"\nimport { createCharacter, STATES } from \"./Character\"\n\nexport async function createPlayer(game) {\n  const player = await createCharacter(\n    game,\n    CHARACTERS.PLAYER,\n    game.app.stage,\n    game.app.screen.width / 2 - SIZE / 2,\n    game.app.screen.height / 2 - SIZE / 2,\n  )\n\n  function still() {\n    characterStill()\n    clearTimeout(faceTimeout)\n  }\n\n  function face(direction) {\n    characterFace(direction)\n    faceTimeout = setTimeout(() => walk(direction), 50)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) face(direction)\n    else characterWalk(direction)\n  }\n\n  function updateState() {\n    characterUpdateState()\n\n    const { data } = player.nextTile\n    if (data.location || data.layer) {\n      const [x, y] = data.position.split(\",\")\n      game.world.setLocation(data.location, data.layer, { x: x * SIZE, y: y * SIZE })\n    }\n  }\n\n  const {\n    walk: characterWalk,\n    face: characterFace,\n    still: characterStill,\n    updateState: characterUpdateState,\n  } = player\n\n  player.still = still\n  player.face = face\n  player.walk = walk\n  player.updateState = updateState\n  player.postUpdate = null\n\n  let faceTimeout = null\n\n  return player\n}","import { Graphics, Loader, Container, UPDATE_PRIORITY } from \"pixi.js\"\nimport worldTexture from \"images/world.png\"\nimport worldData from \"images/data/world.json\"\nimport { SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { createCharacter } from \"./Character\"\n\nexport async function createWorld(game) {\n  const world = {\n    game,\n    update,\n    tileAt,\n    setLocation,\n    load,\n    events: null,\n    get location() {\n      return location\n    },\n    set location(newLocation) {\n      location = newLocation\n      playerDB.setItem(\"location\", newLocation)\n    },\n    get layer() {\n      return layer\n    },\n    set layer(newLayer) {\n      layer = newLayer\n      playerDB.setItem(\"layer\", newLayer)\n    },\n    texture: null,\n    data: null,\n    map: {},\n    tiles: {},\n    characters: {},\n    camera: new Container(),\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  function setLocation(location, layer, position) {\n    world.location = location || world.location\n    world.layer = layer || \"index\"\n    playerDB.setItem(\"location\", world.location)\n    playerDB.setItem(\"layer\", world.layer)\n    loadMapLocation(position)\n  }\n\n  async function load() {\n    const texture = await loadTexture()\n    world.texture = texture\n    world.data = {\n      tileSize: worldData.tilewidth,\n      columns: worldData.columns,\n      tiles: worldData.tiles.reduce((acc, tile) => {\n        acc[tile.id] = tile.properties.reduce(addProperties, {})\n        return acc\n      }, {})\n    }\n    await loadMapLocation()\n    world.game.enableControls = true\n  }\n\n  async function loadMapLocation(position) {\n    const eventsImport = import(`scripts/${world.location}/${world.layer}`).catch(() => ({ default: {} }))\n\n    const { location, layer } = world\n    let locationMap = world.map[location + layer]\n    let locationTiles = world.tiles[location + layer]\n    let locationCharacters = world.characters[location + layer]\n\n    if (!locationMap) {\n      locationMap = new Container()\n      locationTiles = {}\n      locationCharacters = []\n\n      const { layers, tilesets, width } = await import(`maps/${location}.json`)\n      const promises = []\n\n      layers.forEach(item => {\n        if (item.name !== layer) return\n\n        if (item.type === \"tilelayer\") loadTile({ item, tilesets, locationTiles, locationMap, width })\n\n        if (item.type === \"objectgroup\") loadObject({ item, tilesets, locationTiles, locationCharacters, locationMap, promises })\n      })\n\n      await Promise.all(promises)\n\n      world.map[location + layer] = locationMap\n      world.tiles[location + layer] = locationTiles\n      world.characters[location + layer] = locationCharacters\n    }\n\n    const { default: events } = await eventsImport\n\n    world.events = events\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n    if (position) world.game.player.position = position\n  }\n\n  function tileAt(x, y) {\n    if (!world.tiles[location + layer]) return {}\n    return world.tiles[location + layer][`${x}-${y}`] || {}\n  }\n\n\n  function loadTile({ item, tilesets, locationTiles, locationMap, width }) {\n    const { tileSize, columns } = world.data\n\n    item.data.forEach((value, index) => {\n      if (!value) return\n      const id = parseInt(value, 10) - tilesets[0].firstgid\n      const object = world.data.tiles[id] || {}\n      const x = (index % width)\n      const y = Math.floor(index / width)\n      const tileX = (id % columns) * tileSize\n      const tileY = Math.floor(id / columns) * tileSize\n\n      locationTiles[`${x}-${y}`] = object\n\n      addGraphic({\n        texture: world.texture,\n        map: locationMap,\n        tileX,\n        tileY,\n        x,\n        y,\n        tileSize,\n      })\n    })\n  }\n\n  function loadObject({ item, tilesets, locationTiles, locationCharacters, locationMap, promises }) {\n    const { tileSize, columns } = world.data\n\n    item.objects.forEach(async object => {\n      const { gid } = object\n      if (!tilesets[1] || gid < tilesets[1].firstgid) {\n        const id = gid - tilesets[0].firstgid\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n        const x = object.x / tileSize\n        const y = object.y / tileSize - 1\n\n        locationTiles[`${x}-${y}`] = { ...(world.data.tiles[id] || {}), ...object.properties.reduce(addProperties, {}) }\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x,\n          y,\n          tileSize,\n        })\n      } else {\n        const id = gid - tilesets[1].firstgid\n        const promise = createCharacter(world.game, id, locationMap, SIZE * object.x / tileSize, SIZE * (object.y / tileSize - 1))\n        promises.push(promise)\n\n        const properties = object.properties.reduce(addProperties, {})\n\n        const character = await promise\n        character.sprite.visible = properties.visible !== false\n\n        locationCharacters.push(character)\n      }\n    })\n  }\n\n  game.app.stage.addChildAt(world.camera, 0)\n\n  game.app.ticker.add(update, null, UPDATE_PRIORITY.INTERACTION)\n\n  let location = null\n  let layer = null\n\n  return world\n}\n\nfunction loadTexture() {\n  return new Promise(resolve => {\n    new Loader().add(\"world\", worldTexture).load((loader, resources) => {\n      resolve(resources.world.texture)\n    })\n  })\n}\n\nfunction addGraphic({ texture, map, tileX, tileY, x, y, tileSize }) {\n  const graphics = new Graphics()\n\n  graphics.beginTextureFill({ texture })\n  graphics.drawRect(tileX, tileY, tileSize, tileSize)\n\n  graphics.width = SIZE\n  graphics.height = SIZE\n\n  graphics.x = -tileX * graphics.scale.x + x * SIZE\n  graphics.y = -tileY * graphics.scale.y + y * SIZE\n\n  map.addChild(graphics)\n}\n\nfunction addProperties(acc, property) {\n  acc[property.name] = property.value\n  return acc\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS, SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { loadText } from \"libraries/util\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nexport async function createGame({ view, setMessage }) {\n  const game = {\n    setMessage,\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n    enableControls: false,\n  }\n\n  function handleAction({ detail }) {\n    if (!game.enableControls) {\n      game.action = null\n    } else {\n      game.action = detail\n    }\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  const save = {\n    position: await playerDB.getItem(\"position\"),\n    location: await playerDB.getItem(\"location\"),\n    layer: await playerDB.getItem(\"layer\"),\n  }\n\n  await prepareGame(game, view)\n\n  if (!save.position) {\n    loadText(\"welcome\", setMessage)\n    game.player.position = { x: SIZE * 3, y: SIZE * 6 }\n    game.world.location = \"PalletTownRooms\"\n    game.world.layer = \"house1 f2\"\n  } else {\n    game.world.location = save.location\n    game.world.layer = save.layer\n  }\n\n  game.world.load()\n\n  window.addEventListener(\"action\", handleAction)\n}\n\nasync function prepareGame(game, view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.app.renderer.plugins.accessibility.destroy()\n  delete game.app.renderer.plugins.accesibility\n\n  game.player = await createPlayer(game)\n  game.world = await createWorld(game)\n}"],"sourceRoot":""}