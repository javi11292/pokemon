{"version":3,"sources":["images/characters.png","images/world.png","images/data/world.xml","scripts lazy /^/.//.*$/ groupOptions: {} namespace object","maps lazy /^/.//.*/.xml$/ groupOptions: {} namespace object","libraries/database.js","images/data/characters.js","game/Character.js","game/World.js","game/index.js","game/Player.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","playerDB","localForage","createInstance","name","CHARACTERS","PLAYER","getFrame","x","y","Math","floor","w","h","STATES","getTextures","spriteSheet","key","data","animations","texture","textures","rotate","frames","createCharacter","game","database","position","newX","setItem","newY","createPosition","character","still","nextState","face","walk","direction","sprite","state","CONTROLS","DOWN","speed","nextDirection","nextTile","newPosition","stillDown","stillUp","stillLeft","stillRight","walkDown","walkUp","walkLeft","walkRight","updatePosition","dimension","move","SPEED","SIZE","updateState","location","layer","split","world","setLocation","a","events","Loader","add","load","loader","resources","Spritesheet","characters","meta","frame","groupD8","MIRROR_HORIZONTAL","walkDown0","walkDown1","walkUp0","walkUp1","getData","toUpperCase","parse","AnimatedSprite","upperCase","width","height","animationSpeed","app","screen","stage","addChild","ticker","speedX","RIGHT","LEFT","speedY","UP","nextX","nextY","tileAt","event","loadEvent","updateNextTile","collision","play","updateTextures","loadTexture","worldTexture","addGraphic","tileX","tileY","object","tileSize","graphics","Graphics","beginTextureFill","drawRect","scale","prepareGame","view","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","renderer","plugins","accessibility","destroy","accesibility","player","characterWalk","characterFace","characterStill","clearTimeout","faceTimeout","setTimeout","createPlayer","update","camera","children","length","getChildAt","getChildByName","loadMapLocation","newLocation","newLayer","Container","pivot","all","parseData","worldData","enableControls","locationMap","eventsImport","catch","url","default","parseMap","layers","columns","value","objects","trim","forEach","row","i","j","parseInt","removeChildren","addChildAt","createWorld","createGame","handleAction","detail","action","setMessage","getItem","save","loadText","window","addEventListener"],"mappings":"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","file":"static/js/6.beecd045.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","module.exports = __webpack_public_path__ + \"static/media/world.db6fb586.xml\";","var map = {\n\t\"./PalletTown\": [\n\t\t123,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/\": [\n\t\t123,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index\": [\n\t\t123,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index.js\": [\n\t\t123,\n\t\t9,\n\t\t0\n\t],\n\t\"./welcome.txt\": [\n\t\t89,\n\t\t7,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 145;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./PalletTown.xml\": [\n\t\t147,\n\t\t7\n\t],\n\t\"./PalletTownRooms.xml\": [\n\t\t148,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 146;\nmodule.exports = webpackAsyncContext;","import localForage from \"localforage\"\n\nexport const playerDB = localForage.createInstance({ name: \"player\" })","import { groupD8 } from \"pixi.js\"\n\nconst SIZE = 16\nconst COLUMNS = 8\nconst ROTATE = \"rotate\"\n\nexport const CHARACTERS = {\n  PLAYER: [6, 14]\n}\n\nfunction getFrame(id) {\n  return {\n    x: (id % COLUMNS) * SIZE,\n    y: (Math.floor(id / COLUMNS)) * SIZE,\n    w: SIZE,\n    h: SIZE,\n  }\n}\n\nexport function getData([x, y]) {\n  const id = y * COLUMNS + x\n\n  return {\n    meta: {},\n    frames: {\n      stillDown: {\n        frame: getFrame(id),\n      },\n      stillUp: {\n        frame: getFrame(id + 1),\n      },\n      stillLeft: {\n        frame: getFrame(id + 2),\n      },\n      stillRight: {\n        frame: getFrame(id + 2),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      walkDown0: {\n        frame: getFrame(id + 3)\n      },\n      walkDown1: {\n        frame: getFrame(id + 3),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      walkUp0: {\n        frame: getFrame(id + 4),\n      },\n      walkUp1: {\n        frame: getFrame(id + 4),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      walkLeft: {\n        frame: getFrame(id + 5),\n      },\n\n      walkRight: {\n        frame: getFrame(id + 5),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n    },\n\n    animations: {\n      walkDown: [\"walkDown0\", \"stillDown\", \"walkDown1\", \"stillDown\"],\n      walkUp: [\"walkUp0\", \"stillUp\", \"walkUp1\", \"stillUp\"],\n      walkLeft: [\"walkLeft\", \"stillLeft\"],\n      walkRight: [\"walkRight\", \"stillRight\"],\n    },\n  }\n}","import { Spritesheet, AnimatedSprite, Loader } from \"pixi.js\"\nimport localForage from \"localforage\"\nimport { getData, CHARACTERS } from \"images/data/characters\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\n\nexport const STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nfunction createPosition(database) {\n  let x = 0\n  let y = 0\n  const position = {\n    get x() {\n      return x\n    },\n    set x(newX) {\n      x = newX\n      database.setItem(\"position\", { ...position, x })\n    },\n    get y() {\n      return y\n    },\n    set y(newY) {\n      y = newY\n      database.setItem(\"position\", { ...position, y })\n    }\n  }\n\n  return position\n}\n\nexport function createCharacter(game, id) {\n  const database = localForage.createInstance({ name: id })\n  const position = createPosition(database)\n\n  const character = {\n    database,\n    game,\n    still,\n    face,\n    walk,\n    sprite: null,\n    state: STATES.STILL,\n    direction: CONTROLS.DOWN,\n    speed: { x: 0, y: 0 },\n    nextDirection: null,\n    nextState: null,\n    nextTile: { data: {} },\n    get position() {\n      return position\n    },\n    set position(newPosition) {\n      position.x = newPosition.x\n      position.y = newPosition.y\n    },\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    character.nextState = STATES.STILL\n  }\n\n  function face(direction) {\n    character.nextDirection = direction\n  }\n\n  function walk(direction) {\n    face(direction)\n    character.nextState = STATES.WALK\n  }\n\n  function update() {\n    const speedX = character.direction === CONTROLS.RIGHT ? 1 : character.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = character.direction === CONTROLS.DOWN ? 1 : character.direction === CONTROLS.UP ? -1 : 0\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y) updateNextTile(speedX, speedY)\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y && character.nextTile.data.collision === \"false\") {\n      character.speed.x = speedX\n      character.speed.y = speedY\n      updatePosition(character.speed.x ? \"x\" : \"y\", true)\n    } else if (character.speed.x || character.speed.y) {\n      updatePosition(character.speed.x ? \"x\" : \"y\")\n    } else {\n      updateState()\n    }\n\n    updateTextures()\n  }\n\n  function updateNextTile(speedX, speedY) {\n    const nextX = Math.floor(character.position.x / SIZE + speedX)\n    const nextY = Math.floor(character.position.y / SIZE + speedY)\n\n    if (character.nextTile.x === nextX && character.nextTile.y === nextY) return\n\n    const data = character.game.world.tileAt(nextX, nextY)\n\n    character.nextTile = {\n      x: nextX,\n      y: nextY,\n      data: character.game.world.tileAt(nextX, nextY),\n    }\n\n    if (data.event === id) loadEvent(nextX, nextY)\n  }\n\n  function updatePosition(dimension, move) {\n    if (!character.speed[dimension]) return\n\n    const speed = character.speed[dimension] * SPEED\n    const remainder = character.position[dimension] % SIZE\n\n    if (remainder || move) {\n      character.position[dimension] += speed\n    } else {\n      character.speed[dimension] = 0\n      updateState()\n\n      const { data } = character.nextTile\n      if (data.location || data.layer) {\n        const [x, y] = data.position.split(\",\")\n        character.game.world.setLocation(data.location, data.layer, { x: x * SIZE, y: y * SIZE })\n      }\n    }\n  }\n\n  function updateState() {\n    if (character.nextDirection) {\n      character.direction = character.nextDirection\n      character.nextDirection = null\n    }\n    if (character.nextState) {\n      character.state = character.nextState\n      character.nextState = null\n    }\n  }\n\n  function updateTextures() {\n    if (!character.sprite) return\n    const textures = character.textures[character.state + upperCase(character.direction)]\n    if (!textures || character.sprite.textures === textures) return\n    character.sprite.textures = textures\n    character.sprite.play()\n  }\n\n  function addSpriteSheet() {\n    new Loader().add(\"characters\", texture).load((loader, resources) => {\n      const spriteSheet = new Spritesheet(resources.characters.texture, getData(CHARACTERS[id.toUpperCase()]))\n\n      spriteSheet.parse(() => {\n        character.textures.stillDown = [spriteSheet.textures.stillDown]\n        character.textures.stillUp = [spriteSheet.textures.stillUp]\n        character.textures.stillLeft = [spriteSheet.textures.stillLeft]\n        character.textures.stillRight = [spriteSheet.textures.stillRight]\n\n        character.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n        character.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n        character.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n        character.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n        const sprite = new AnimatedSprite(character.textures[character.state + upperCase(character.direction)])\n\n        sprite.width = SIZE\n        sprite.height = SIZE\n        sprite.animationSpeed = 0.1\n        sprite.x = character.game.app.screen.width / 2 - sprite.width / 2\n        sprite.y = character.game.app.screen.height / 2 - sprite.height / 2\n        character.sprite = sprite\n\n        character.game.app.stage.addChild(sprite)\n      })\n    })\n  }\n\n  async function loadEvent(x, y) {\n    game.world.events[id][`${x}-${y}`](character.game)\n  }\n\n  addSpriteSheet()\n\n  character.game.app.ticker.add(update)\n\n  return character\n}","import { Graphics, Loader, Container } from \"pixi.js\"\nimport worldTexture from \"images/world.png\"\nimport worldData from \"images/data/world.xml\"\nimport { SIZE } from \"libraries/constants\"\nimport { parseData, parseMap } from \"libraries/util\"\nimport { playerDB } from \"libraries/database\"\n\nfunction loadTexture() {\n  return new Promise(resolve => {\n    new Loader().add(\"world\", worldTexture).load((loader, resources) => {\n      resolve(resources.world.texture)\n    })\n  })\n}\n\nfunction addGraphic({ texture, map, tileX, tileY, x, y, object, tileSize }) {\n  const graphics = new Graphics()\n  graphics.name = `${x}-${y}`\n  graphics.data = object\n\n  graphics.beginTextureFill({ texture })\n  graphics.drawRect(tileX, tileY, tileSize, tileSize)\n\n  graphics.width = SIZE\n  graphics.height = SIZE\n\n  graphics.x = -tileX * graphics.scale.x + x * SIZE\n  graphics.y = -tileY * graphics.scale.y + y * SIZE\n\n  map.addChild(graphics)\n}\n\nexport function createWorld(game) {\n  let location = null\n  let layer = null\n\n  const world = {\n    game,\n    update,\n    tileAt,\n    setLocation,\n    load,\n    events: null,\n    get location() {\n      return location\n    },\n    set location(newLocation) {\n      location = newLocation\n      playerDB.setItem(\"location\", newLocation)\n    },\n    get layer() {\n      return layer\n    },\n    set layer(newLayer) {\n      layer = newLayer\n      playerDB.setItem(\"layer\", newLayer)\n    },\n    texture: null,\n    data: null,\n    map: {},\n    camera: new Container(),\n  }\n\n  function setLocation(location, layer, position) {\n    world.location = location || world.location\n    world.layer = layer || \"index\"\n    playerDB.setItem(\"location\", world.location)\n    playerDB.setItem(\"layer\", world.layer)\n    loadMapLocation(position)\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  async function load() {\n    const [texture, data] = await Promise.all([loadTexture(), parseData(worldData)])\n    world.texture = texture\n    world.data = data\n    await loadMapLocation()\n    world.game.enableControls = true\n  }\n\n  async function loadMapLocation(position) {\n    const { location, layer } = world\n    let locationMap = world.map[location + layer]\n\n    const eventsImport = import(`scripts/${world.location}/${world.layer}`).catch(() => ({}))\n\n    if (!locationMap) {\n      locationMap = new Container()\n      const { default: url } = await import(`maps/${location}.xml`)\n      const layers = await parseMap(url)\n      const { tileSize, columns } = world.data\n      const { value: map, objects } = layers[layer]\n\n      map.trim().split(\"\\n\").forEach((row, i) => row.split(\",\").forEach((value, j) => {\n        if (!value || value === \"0\") return\n        const id = parseInt(value, 10) - 1\n        const object = world.data[id] || {}\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x: j,\n          y: i,\n          tileSize,\n          object,\n        })\n      }))\n\n      objects.forEach(object => {\n        const id = parseInt(object.id, 10) - 1\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x: object.x / tileSize,\n          y: object.y / tileSize,\n          tileSize,\n          object: { ...(world.data[id] || {}), ...object },\n        })\n      })\n\n      world.map[location + layer] = locationMap\n    }\n\n    const events = await eventsImport\n\n    world.events = events\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n    if (position) world.game.player.position = position\n  }\n\n  function tileAt(x, y) {\n    if (!world.camera.children.length) return {}\n    return world.camera.getChildAt(0).getChildByName(`${x}-${y}`)?.data || {}\n  }\n\n  game.app.stage.addChildAt(world.camera, 0)\n\n  game.app.ticker.add(update)\n\n  return world\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS, SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { loadText } from \"libraries/util\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nfunction prepareGame(game, view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.app.renderer.plugins.accessibility.destroy()\n  delete game.app.renderer.plugins.accesibility\n\n  game.player = createPlayer(game)\n  game.world = createWorld(game)\n}\n\nexport async function createGame({ view, setMessage }) {\n  const game = {\n    setMessage,\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n    enableControls: false,\n  }\n\n  const save = {\n    position: await playerDB.getItem(\"position\"),\n    location: await playerDB.getItem(\"location\"),\n    layer: await playerDB.getItem(\"layer\"),\n  }\n\n  prepareGame(game, view)\n\n  if (!save.position) {\n    loadText(\"welcome\", setMessage)\n    game.player.position = { x: SIZE * 3, y: SIZE * 7 }\n    game.world.location = \"PalletTownRooms\"\n    game.world.layer = \"house1 f2\"\n  } else {\n    game.player.position = save.position\n    game.world.location = save.location\n    game.world.layer = save.layer\n  }\n\n  game.world.load()\n\n  function handleAction({ detail }) {\n    if (!game.enableControls) return\n    game.action = detail\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  window.addEventListener(\"action\", handleAction)\n}","import { createCharacter, STATES } from \"./Character\"\n\nexport function createPlayer(game) {\n  const player = createCharacter(game, \"player\")\n  const { walk: characterWalk, face: characterFace, still: characterStill } = player\n  player.still = still\n  player.face = face\n  player.walk = walk\n\n  let faceTimeout = null\n\n  function still() {\n    characterStill()\n    clearTimeout(faceTimeout)\n  }\n\n  function face(direction) {\n    characterFace(direction)\n    faceTimeout = setTimeout(() => walk(direction), 50)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) face(direction)\n    else characterWalk(direction)\n  }\n\n  return player\n}"],"sourceRoot":""}