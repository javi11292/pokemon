{"version":3,"sources":["images/characters.png","images/world.png","images/data/world.xml","maps lazy /^/.//.*/.xml$/ groupOptions: {} namespace object","libraries/database.js","images/data/player.js","game/Player.js","game/World.js","game/index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","playerDB","localForage","createInstance","storeName","meta","frames","stillDown","frame","x","SIZE","y","w","h","walkDown0","walkDown1","groupD8","MIRROR_HORIZONTAL","stillUp","walkUp0","walkUp1","stillLeft","walkLeft","stillRight","walkRight","animations","walkDown","walkUp","STATES","getTextures","spriteSheet","key","data","texture","textures","rotate","createPlayer","game","position","newX","setItem","newY","createPosition","player","update","speedX","direction","CONTROLS","RIGHT","LEFT","speedY","DOWN","UP","state","speed","nextX","Math","floor","nextY","nextTile","world","tileAt","setNextTileData","collision","updatePosition","updateState","sprite","upperCase","play","setTextures","still","walk","nextDirection","nextState","newPosition","setTimeout","action","face","dimension","move","SPEED","remainder","abs","offset","normalizedOffset","location","layer","split","setLocation","Loader","add","load","loader","resources","Spritesheet","characters","parse","AnimatedSprite","width","height","animationSpeed","app","screen","stage","addChild","loadTexture","worldTexture","addGraphic","tileX","tileY","object","tileSize","graphics","Graphics","name","beginTextureFill","drawRect","scale","createWorld","camera","pivot","children","length","getChildAt","getChildByName","loadMapLocation","newLocation","newLayer","Container","a","all","parseData","worldData","enableControls","locationMap","url","default","parseMap","layers","columns","value","objects","forEach","row","i","j","parseInt","removeChildren","addChildAt","createGame","handleAction","detail","view","setMessage","getItem","save","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","renderer","plugins","accessibility","destroy","accesibility","loadText","window","addEventListener","ticker"],"mappings":"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","file":"static/js/4.05a0d3c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","module.exports = __webpack_public_path__ + \"static/media/world.db6fb586.xml\";","var map = {\n\t\"./PalletTown.xml\": [\n\t\t145,\n\t\t5\n\t],\n\t\"./PalletTownRooms.xml\": [\n\t\t146,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 144;\nmodule.exports = webpackAsyncContext;","import localForage from \"localforage\"\n\nexport const playerDB = localForage.createInstance({ storeName: \"player\" })","import { groupD8 } from \"pixi.js\"\n\nconst SIZE = 16\nconst ROTATE = \"rotate\"\n\nexport default {\n  meta: {},\n  frames: {\n    stillDown: {\n      frame: {\n        x: SIZE * 6,\n        y: SIZE * 14,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkDown0: {\n      frame: {\n        x: SIZE * 1,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkDown1: {\n      frame: {\n        x: SIZE * 1,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n\n    stillUp: {\n      frame: {\n        x: SIZE * 7,\n        y: SIZE * 14,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkUp0: {\n      frame: {\n        x: SIZE * 2,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkUp1: {\n      frame: {\n        x: SIZE * 2,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n\n\n    stillLeft: {\n      frame: {\n        x: SIZE * 0,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkLeft: {\n      frame: {\n        x: SIZE * 3,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n\n    stillRight: {\n      frame: {\n        x: SIZE * 0,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n    walkRight: {\n      frame: {\n        x: SIZE * 3,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n  },\n  animations: {\n    walkDown: [\"walkDown0\", \"stillDown\", \"walkDown1\", \"stillDown\"],\n    walkUp: [\"walkUp0\", \"stillUp\", \"walkUp1\", \"stillUp\"],\n    walkLeft: [\"walkLeft\", \"stillLeft\"],\n    walkRight: [\"walkRight\", \"stillRight\"],\n  },\n}","import { Spritesheet, AnimatedSprite, Loader } from \"pixi.js\"\nimport data from \"images/data/player\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\n\nconst STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nfunction createPosition() {\n  let x = 0\n  let y = 0\n  const position = {\n    get x() {\n      return x\n    },\n    set x(newX) {\n      x = newX\n      playerDB.setItem(\"position\", { ...position, x })\n    },\n    get y() {\n      return y\n    },\n    set y(newY) {\n      y = newY\n      playerDB.setItem(\"position\", { ...position, y })\n    }\n  }\n\n  return position\n}\n\nexport function createPlayer(game) {\n  const position = createPosition()\n\n  const player = {\n    game,\n    update,\n    still,\n    walk,\n    sprite: null,\n    state: null,\n    direction: CONTROLS.DOWN,\n    nextDirection: null,\n    nextState: null,\n    get position() {\n      return position\n    },\n    set position(newPosition) {\n      position.x = newPosition.x\n      position.y = newPosition.y\n      playerDB.setItem(\"position\", newPosition)\n    },\n    speed: { x: 0, y: 0 },\n    nextTile: { data: {} },\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    player.nextState = STATES.STILL\n  }\n\n  function face(direction) {\n    setTimeout(() => {\n      player.direction = direction\n      if (direction === player.game.action) walk(direction)\n      else still()\n    }, 75)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) {\n      face(direction)\n      return\n    }\n\n    player.nextDirection = direction\n    player.state = STATES.WALK\n  }\n\n  function setTextures() {\n    if (!player.sprite) return\n    const textures = player.textures[player.state + upperCase(player.direction)]\n    if (!textures || player.sprite.textures === textures) return\n    player.sprite.textures = textures\n    player.sprite.play()\n  }\n\n  function updateState() {\n    if (player.nextDirection) {\n      player.direction = player.nextDirection\n      player.nextDirection = null\n    }\n    if (player.nextState) {\n      player.state = player.nextState\n      player.nextState = null\n    }\n  }\n\n  function updatePosition(dimension, move) {\n    if (!player.speed[dimension]) return\n\n    const speed = player.speed[dimension] * SPEED\n    const remainder = Math.abs(player.position[dimension] % SIZE)\n\n    const offset = remainder && (player.speed[dimension] === 1 ? remainder : SIZE - remainder)\n\n    if (remainder) {\n      const normalizedOffset = player.position[dimension] <= 0 ? offset : SIZE - offset\n      player.position[dimension] += normalizedOffset >= SPEED ? speed : normalizedOffset * player.speed[dimension]\n    } else if (move) {\n      player.position[dimension] += speed\n    } else {\n      player.speed[dimension] = 0\n      updateState()\n      const { data } = player.nextTile\n      if (data.location || data.layer) {\n        const [x, y] = data.position.split(\",\")\n        player.game.world.setLocation(data.location, data.layer, { x: x * SIZE, y: y * SIZE + SIZE })\n      }\n    }\n  }\n\n  function setNextTileData(speedX, speedY) {\n    const nextX = Math.floor(player.position.x / SIZE + speedX)\n    const nextY = Math.floor(player.position.y / SIZE + speedY)\n\n    if (player.nextTile.x === nextX && player.nextTile.y === nextY) return\n\n    player.nextTile = {\n      x: nextX,\n      y: nextY,\n      data: player.game.world.tileAt(nextX, nextY),\n    }\n  }\n\n  function update() {\n    const speedX = player.direction === CONTROLS.RIGHT ? 1 : player.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = player.direction === CONTROLS.DOWN ? 1 : player.direction === CONTROLS.UP ? -1 : 0\n\n    if (player.state === STATES.WALK && !player.speed.x && !player.speed.y) setNextTileData(speedX, speedY)\n\n    if (player.state === STATES.WALK && !player.speed.x && !player.speed.y && player.nextTile.data.collision === \"false\") {\n      player.speed.x = speedX\n      player.speed.y = speedY\n      updatePosition(player.speed.x ? \"x\" : \"y\", true)\n    } else if (player.speed.x || player.speed.y) {\n      updatePosition(player.speed.x ? \"x\" : \"y\")\n    } else {\n      updateState()\n    }\n\n    setTextures()\n  }\n\n  function addSpriteSheet() {\n    new Loader().add(\"characters\", texture).load((loader, resources) => {\n      const spriteSheet = new Spritesheet(resources.characters.texture, data)\n\n      spriteSheet.parse(() => {\n        player.textures.stillDown = [spriteSheet.textures.stillDown]\n        player.textures.stillUp = [spriteSheet.textures.stillUp]\n        player.textures.stillLeft = [spriteSheet.textures.stillLeft]\n        player.textures.stillRight = [spriteSheet.textures.stillRight]\n\n        player.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n        player.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n        player.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n        player.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n        const sprite = new AnimatedSprite(player.textures[`still${upperCase(player.direction)}`])\n\n        sprite.width = SIZE\n        sprite.height = SIZE\n        sprite.animationSpeed = 0.1\n        sprite.x = player.game.app.screen.width / 2 - sprite.width / 2\n        sprite.y = player.game.app.screen.height / 2 - sprite.height / 2\n        player.sprite = sprite\n\n        player.game.app.stage.addChild(sprite)\n      })\n    })\n  }\n\n  addSpriteSheet()\n\n  return player\n}","import { Graphics, Loader, Container } from \"pixi.js\"\nimport worldTexture from \"images/world.png\"\nimport worldData from \"images/data/world.xml\"\nimport { SIZE } from \"libraries/constants\"\nimport { parseData, parseMap } from \"libraries/util\"\nimport { playerDB } from \"libraries/database\"\n\nfunction loadTexture() {\n  return new Promise(resolve => {\n    new Loader().add(\"world\", worldTexture).load((loader, resources) => {\n      resolve(resources.world.texture)\n    })\n  })\n}\n\nfunction addGraphic({ texture, map, tileX, tileY, x, y, object, tileSize }) {\n  const graphics = new Graphics()\n  graphics.name = `${x}-${y}`\n  graphics.data = object\n\n  graphics.beginTextureFill({ texture })\n  graphics.drawRect(tileX, tileY, tileSize, tileSize)\n\n  graphics.width = SIZE\n  graphics.height = SIZE\n\n  graphics.x = -tileX * graphics.scale.x + x * SIZE\n  graphics.y = -tileY * graphics.scale.y + y * SIZE\n\n  map.addChild(graphics)\n}\n\nexport function createWorld(game) {\n  let location = null\n  let layer = null\n\n  const world = {\n    game,\n    update,\n    tileAt,\n    setLocation,\n    load,\n    get location() {\n      return location\n    },\n    set location(newLocation) {\n      location = newLocation\n      playerDB.setItem(\"location\", newLocation)\n    },\n    get layer() {\n      return layer\n    },\n    set layer(newLayer) {\n      layer = newLayer\n      playerDB.setItem(\"layer\", newLayer)\n    },\n    texture: null,\n    data: null,\n    map: {},\n    camera: new Container(),\n  }\n\n  function setLocation(location, layer, position) {\n    world.location = location || world.location\n    world.layer = layer || \"index\"\n    playerDB.setItem(\"location\", world.location)\n    playerDB.setItem(\"layer\", world.layer)\n    loadMapLocation(position)\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  async function load() {\n    const [texture, data] = await Promise.all([loadTexture(), parseData(worldData)])\n    world.texture = texture\n    world.data = data\n    await loadMapLocation()\n    world.game.enableControls = true\n  }\n\n  async function loadMapLocation(position) {\n    const { location, layer } = world\n    let locationMap = world.map[location + layer]\n\n    if (!locationMap) {\n      locationMap = new Container()\n      const { default: url } = await import(`maps/${location}.xml`)\n      const layers = await parseMap(url)\n      const { tileSize, columns } = world.data\n      const { value: map, objects } = layers[layer]\n\n      map.split(\"\\n\").forEach((row, i) => row.split(\",\").forEach((value, j) => {\n        if (!value || value === \"0\") return\n        const id = parseInt(value, 10) - 1\n        const object = world.data[id] || {}\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x: j,\n          y: i,\n          tileSize,\n          object,\n        })\n      }))\n\n      objects.forEach(object => {\n        const id = parseInt(object.id, 10) - 1\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x: object.x / tileSize,\n          y: object.y / tileSize,\n          tileSize,\n          object: { ...(world.data[id] || {}), ...object },\n        })\n      })\n\n      world.map[location + layer] = locationMap\n    }\n\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n    if (position) world.game.player.position = position\n  }\n\n  function tileAt(x, y) {\n    if (!world.camera.children.length) return {}\n    return world.camera.getChildAt(0).getChildByName(`${x}-${y}`)?.data || {}\n  }\n\n  game.app.stage.addChildAt(world.camera, 0)\n\n  return world\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS, SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { loadText } from \"libraries/util\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\n\nexport async function createGame({ view, setMessage }) {\n  const game = {\n    setMessage,\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n    enableControls: false,\n  }\n\n  const save = {\n    position: await playerDB.getItem(\"position\"),\n    location: await playerDB.getItem(\"location\"),\n    layer: await playerDB.getItem(\"layer\"),\n  }\n\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.app.renderer.plugins.accessibility.destroy()\n  delete game.app.renderer.plugins.accesibility\n\n  game.player = createPlayer(game)\n  game.world = createWorld(game)\n\n  if (!save.position) {\n    loadText(\"welcome\", setMessage)\n    game.player.position = { x: SIZE * 3, y: SIZE * 7 }\n    game.world.location = \"PalletTownRooms\"\n    game.world.layer = \"house1 f2\"\n  } else {\n    game.player.position = save.position\n    game.world.location = save.location\n    game.world.layer = save.layer\n  }\n\n  game.world.load()\n\n  function handleAction({ detail }) {\n    if (!game.enableControls) return\n    game.action = detail\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  window.addEventListener(\"action\", handleAction)\n\n  game.app.ticker.add(() => {\n    game.player.update()\n    game.world.update()\n  })\n}"],"sourceRoot":""}