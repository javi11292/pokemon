{"version":3,"sources":["scripts/index.js","libraries/database.js","images/characters.png","images/world.png","scripts lazy /^/.//.*$/ groupOptions: {} namespace object","maps lazy /^/.//.*/.json$/ groupOptions: {} namespace object","game/Character.js","game/Player.js","game/World.js","game/index.js"],"names":["getEvents","game","welcome","setMessage","value","playerDB","localForage","createInstance","name","CHARACTERS","PLAYER","storeName","getEventsDB","module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","t","STATES","createCharacter","container","x","y","still","face","walk","update","postUpdate","updateNextTile","updatePosition","updateState","updateTextures","addSpritesheet","loadSprite","a","character","textures","stillDown","spritesheet","stillUp","stillLeft","stillRight","walkDown","getTextures","walkUp","walkLeft","walkRight","sprite","AnimatedSprite","state","upperCase","direction","width","SIZE","height","animationSpeed","addChild","Spritesheet","resources","characters","texture","getData","parse","play","nextDirection","nextState","world","tileAt","position","dimension","move","speed","SPEED","speedX","speedY","nextX","Math","floor","nextY","data","nextTile","CONTROLS","RIGHT","LEFT","DOWN","UP","event","check","collision","properties","visible","loadingResources","loadResources","database","location","layer","assign","setItem","onNextTileUpdate","promise","newEvent","createEvent","newValue","newPosition","getItem","createPosition","app","ticker","add","Loader","load","loader","loadedResources","startX","startY","removeCharacter","positionDB","newX","newY","spriteSheet","key","animations","rotate","frames","meta","frame","getFrame","groupD8","MIRROR_HORIZONTAL","w","h","callback","createPlayer","loadEvent","interact","player","events","prevTile","characterUpdateState","split","setLocation","characterWalk","characterFace","faceTimeout","setTimeout","characterStill","clearTimeout","stage","screen","createWorld","loadMapLocation","loadTile","loadObject","item","tilesets","locationTiles","locationCharacters","locationMap","promises","tileSize","columns","objects","forEach","object","gid","firstgid","tileX","tileY","tiles","reduce","addProperties","addGraphic","push","index","parseInt","eventsImport","catch","Container","layers","type","camera","removeChildren","loadTexture","worldData","tilewidth","acc","tile","enableControls","pivot","newLocation","newLayer","addChildAt","UPDATE_PRIORITY","INTERACTION","worldTexture","graphics","Graphics","beginTextureFill","drawRect","scale","property","createGame","handleAction","detail","action","A","view","save","prepareGame","window","addEventListener","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","renderer","plugins","accessibility","destroy","accesibility"],"mappings":"kGAAO,SAASA,EAAUC,GAWxB,MAVe,CACbC,QADa,WAEXD,EAAKE,WAAW,CACdC,MAAM,gMAJd,kD,iCCAA,iGAGaC,EAAWC,IAAYC,eAAe,CAAEC,KAAMC,IAAWC,OAAQC,UAAW,UAElF,SAASC,EAAYD,GAC1B,OAAOL,IAAYC,eAAe,CAAEC,KAAM,SAAUG,gB,oBCNtDE,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,u7CCA3C,IAAIC,EAAM,CACT,KAAM,CACL,KAED,eAAgB,CACf,IACA,GAED,gBAAiB,CAChB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,kCAAmC,CAClC,IACA,GAED,UAAW,CACV,KAED,aAAc,CACb,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAON,QAAQQ,IAAIF,EAAIG,MAAM,GAAGd,IAAIG,EAAoBK,IAAID,MAAK,WAChE,OAAOJ,EAAoBS,MAG7BX,EAAoBc,KAAO,WAC1B,OAAOC,OAAOD,KAAKf,IAEpBC,EAAoBW,GAAK,IACzBd,EAAOC,QAAUE,G,oBCrDjB,IAAID,EAAM,CACT,oBAAqB,CACpB,IACA,GAED,yBAA0B,CACzB,IACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBc,EAAEL,EAAI,MAGnCX,EAAoBc,KAAO,WAC1B,OAAOC,OAAOD,KAAKf,IAEpBC,EAAoBW,GAAK,IACzBd,EAAOC,QAAUE,G,wNClBJiB,EACJ,QADIA,EAEL,OAGD,SAAeC,EAAtB,0C,4CAAO,WAA+BjC,EAAM0B,EAAIQ,EAAWC,EAAGC,GAAvD,YAsEIC,EAKAC,EAIAC,EAKAC,EA6BAC,EAKAC,EAaAC,EAcAC,EAcAC,EAQAC,EASAC,EAhLJ,iBAAAC,EAAA,yDAgLID,EAhLJ,WAiLHE,EAAUC,SAASC,UAAY,CAACF,EAAUG,YAAYF,SAAS,YAAcxB,IAC7EuB,EAAUC,SAASG,QAAU,CAACJ,EAAUG,YAAYF,SAAS,UAAYxB,IACzEuB,EAAUC,SAASI,UAAY,CAACL,EAAUG,YAAYF,SAAS,YAAcxB,IAC7EuB,EAAUC,SAASK,WAAa,CAACN,EAAUG,YAAYF,SAAS,aAAexB,IAE/EuB,EAAUC,SAASM,SAAWC,EAAYR,EAAUG,YAAa,YACjEH,EAAUC,SAASQ,OAASD,EAAYR,EAAUG,YAAa,UAC/DH,EAAUC,SAASS,SAAWF,EAAYR,EAAUG,YAAa,YACjEH,EAAUC,SAASU,UAAYH,EAAYR,EAAUG,YAAa,aAElE,IAAMS,EAAS,IAAIC,IAAeb,EAAUC,SAASD,EAAUc,MAAQC,YAAUf,EAAUgB,aAC3FhB,EAAUY,OAASA,EAEnBA,EAAOK,MAAQC,IACfN,EAAOO,OAASD,IAChBN,EAAOQ,eAAiB,GACxBR,EAAO1B,EAAIA,EACX0B,EAAOzB,EAAIA,EAEXF,EAAUoC,SAAST,IA7BZf,EAvKJ,WAwKH,IAAMM,EAAc,IAAImB,IAAYC,EAAUC,WAAWC,QAASC,EAAQjD,IAC1EuB,EAAUG,YAAcA,EAExBA,EAAYwB,OAAM,WAChB7B,QAbKF,EA/JJ,WAgKH,GAAKI,EAAUY,OAAf,CACA,IAAMX,EAAWD,EAAUC,SAASD,EAAUc,MAAQC,YAAUf,EAAUgB,YACrEf,GAAYD,EAAUY,OAAOX,WAAaA,IAC/CD,EAAUY,OAAOX,SAAWA,EAC5BD,EAAUY,OAAOgB,UAnBVjC,EAjJJ,WAkJCK,EAAU6B,gBACZ7B,EAAUgB,UAAYhB,EAAU6B,cAChC7B,EAAU6B,cAAgB,MAGxB7B,EAAU8B,YACZ9B,EAAUc,MAAQd,EAAU8B,UAC5B9B,EAAU8B,UAAY,MAGxB/E,EAAKgF,MAAMC,OAAOC,EAAS/C,EAAIgC,IAAMe,EAAS9C,EAAI+B,IAAM,CAAElB,eAzBnDN,EAnIJ,SAmImBwC,EAAWC,GACjC,GAAKnC,EAAUoC,MAAMF,GAArB,CAEA,IAAME,EAAQpC,EAAUoC,MAAMF,GAAaG,IACzBJ,EAASC,GAAahB,KAEvBiB,EACfF,EAASC,IAAcE,GAEvBpC,EAAUoC,MAAMF,GAAa,EAC7BlC,EAAUL,iBAvBLF,EAtHJ,SAsHmB6C,EAAQC,GAC9B,IAAMC,EAAQC,KAAKC,MAAMT,EAAS/C,EAAIgC,IAAOoB,GACvCK,EAAQF,KAAKC,MAAMT,EAAS9C,EAAI+B,IAAOqB,GAEvCK,EAAO5C,EAAUjD,KAAKgF,MAAMC,OAAOQ,EAAOG,GAEhD3C,EAAU6C,SAAW,CACnB3D,EAAGsD,EACHrD,EAAGwD,EACHC,SAdKpD,EAjHJ,WAkHHQ,EAAUY,OAAO1B,EAAI+C,EAAS/C,EAC9Bc,EAAUY,OAAOzB,EAAI8C,EAAS9C,GA/BvBI,EApFJ,WAoFc,IAAD,IACV+C,EAAStC,EAAUgB,YAAc8B,IAASC,MAAQ,EAAI/C,EAAUgB,YAAc8B,IAASE,MAAQ,EAAI,EACnGT,EAASvC,EAAUgB,YAAc8B,IAASG,KAAO,EAAIjD,EAAUgB,YAAc8B,IAASI,IAAM,EAAI,EAEjGlD,EAAUoC,MAAMlD,GAAMc,EAAUoC,MAAMjD,GAAGM,EAAe6C,EAAQC,GAEjEY,GAASA,EAAMC,UACjBD,EAAQ,MAIRnD,EAAUc,QAAU/B,GACnBiB,EAAUoC,MAAMlD,GAAMc,EAAUoC,MAAMjD,IACD,IAAtCa,EAAU6C,SAASD,KAAKS,YACmC,KAA1D,UAAArD,EAAU6C,SAASD,KAAK5C,iBAAxB,eAAmCsD,WAAWC,WAAsE,KAAjD,UAAAvD,EAAU6C,SAASD,KAAK5C,iBAAxB,eAAmCqD,WAK9FrD,EAAUoC,MAAMlD,GAAKc,EAAUoC,MAAMjD,EAC9CO,EAAeM,EAAUoC,MAAMlD,EAAI,IAAM,KAEzCS,KANAK,EAAUoC,MAAMlD,EAAIoD,EACpBtC,EAAUoC,MAAMjD,EAAIoD,EACpB7C,EAAeM,EAAUoC,MAAMlD,EAAI,IAAM,KAAK,IAOhDU,IACAI,EAAUR,cA/BHF,EA/EJ,SA+ES0B,GACZ3B,EAAK2B,GACLhB,EAAU8B,UAAY/C,GANfM,EA3EJ,SA2ES2B,GACZhB,EAAU6B,cAAgBb,GANnB5B,EAtEJ,SAsEU4B,GACbhB,EAAU8B,UAAY/C,EAClBiC,IAAWhB,EAAU6B,cAAgBb,IAvEtCO,GAAciC,EADd,kCAEsBC,IAFtB,QAEHD,EAFG,sBAKCE,EAAWtG,IAAYC,eAAe,CAAEC,KAAMmB,EAAIhB,UAAWgB,IAAOlB,IAAWC,OAAST,EAAKgF,MAAM4B,SAAW5G,EAAKgF,MAAM6B,MAAQ,UALlI,KAQHF,EARG,KASH3G,EATG,KAWHqC,EAXG,KAYHC,EAZG,KAaHC,EAbG,KAcHK,EAdG,KAwBHH,EAxBG,KAyBe,aAzBf,KAiCIT,EAjCJ,KAkCQ+D,IAASG,KAlCjB,MAmCI,CAAE/D,EAAG,EAAGC,EAAG,GAnCf,gBAyDUqC,EAAW/C,UAzDrB,aAyDU,EAAgB0B,YAzD1B,OA0DO,UAAAqB,EAAW/C,UAAX,eAAgBwB,WAAY,CACpCC,UAAW,GACXE,QAAS,GACTC,UAAW,GACXC,WAAY,GACZC,SAAU,GACVE,OAAQ,GACRC,SAAU,GACVC,UAAW,IA3DTX,EAPD,CAQH0D,SARG,KASH3G,KATG,KAUHsG,WAAW,EACXjE,MAXG,KAYHC,KAZG,KAaHC,KAbG,KAcHK,YAdG,KAeH,iBACE,OAAO2D,GAET,eAAepG,GACb2B,OAAOgF,OAAOP,EAAYpG,GAC1BwG,EAASI,QAAQ,aAAcR,GAE/BtD,EAAUY,OAAO2C,SAAiC,IAAvBD,EAAWC,SAExC/D,WAxBG,KAyBHuE,iBAzBG,KA0BH,YACE,OAAOZ,EAAMa,SAEf,UAAUC,GACRd,EAAQe,EAAYD,IAEtBrD,OAAQ,KACRE,MAjCG,KAkCHE,UAlCG,KAmCHoB,MAnCG,MAoCHP,cAAe,KACfC,UAAW,KACX,eACE,OAAOe,GAET,aAAasB,GACXtB,EAAWsB,EACXnE,EAAU+D,iBAAiBI,IAE7B,eACE,OAAOlC,GAET,aAAamC,GACXrH,EAAKgF,MAAMC,OAAOC,EAAS/C,EAAIgC,IAAMe,EAAS9C,EAAG,CAAEa,UAAW,OAC9D6C,EAAW,CAAED,KAAM,IAEnBX,EAAS/C,EAAIkF,EAAYlF,EACzB+C,EAAS9C,EAAIiF,EAAYjF,GAI3BgB,YAzDG,MA0DHF,SA1DG,OAuMDkD,EAAQ,KACRN,EAAW,CAAED,KAAM,IAxMlB,UAyMoBc,EAASW,QAAQ,cAzMrC,qDAyMsD,GAzMtD,eAyMCf,EAzMD,gBA0MkBgB,EAAetE,EAAW0D,EAAUxE,EAAGC,GA1MzD,eA0MC8C,EA1MD,OA4MAT,EAAW/C,GACXqB,IADgBD,IAGrBG,EAAUjD,KAAKwH,IAAIC,OAAOC,IAAIlF,GAE9BiC,EAAW/C,GAAMuB,EAjNZ,kBAmNEA,GAnNF,6C,+BAsNQyD,I,2EAAf,sBAAA1D,EAAA,+EACS,IAAI7B,SAAQ,SAAAC,IACjB,IAAIuG,KAASD,IAAI,aAAchD,KAASkD,MAAK,SAACC,EAAQC,GACpDtD,EAAYsD,EACZ1G,WAJN,4C,+BASemG,E,oFAAf,WAA8BtE,EAAW0D,EAAUoB,EAAQC,GAA3D,QACWC,EADX,iBAAAjF,EAAA,6DACWiF,EADX,WAEIhF,EAAUjD,KAAKgF,MAAMC,OAAOC,EAAS/C,EAAIgC,IAAMe,EAAS9C,EAAI+B,IAAM,CAAElB,UAAW,QAFnF,SAK2B0D,EAASW,QAAQ,YAL5C,cAKQY,EALR,OAMM/F,EANN,iBAMU+F,QANV,IAMUA,OANV,EAMUA,EAAY/F,SANtB,QAM2B4F,EACrB3F,EAPN,iBAOU8F,QAPV,IAOUA,OAPV,EAOUA,EAAY9F,SAPtB,QAO2B4F,EAEnB9C,EATR,CAUI,QACE,OAAO/C,GAET,MAAMgG,GACAhG,EAAIgC,MAAS,GAAG8D,KAEpB9F,EAAIgG,GACIhE,MAAS,GACfwC,EAASI,QAAQ,WAAjB,eAAkC7B,EAAlC,CAA4C/C,QAGhD,QACE,OAAOC,GAET,MAAMgG,GACAhG,EAAI+B,MAAS,GAAG8D,KAEpB7F,EAAIgG,GACIjE,MAAS,GACfwC,EAASI,QAAQ,WAAjB,eAAkC7B,EAAlC,CAA4C9C,SA7BpD,kBAkCS8C,GAlCT,4C,sBAqCA,SAASzB,EAAY4E,EAAaC,GAChC,OAAOD,EAAYxC,KAAK0C,WAAWD,GAAKxH,KAAI,SAAAY,GAAO,IAAD,EAC1CgD,EAAU2D,EAAYnF,SAASxB,GAErC,OADAgD,EAAQ8D,OAAR,UAAiBH,EAAYxC,KAAK4C,OAAO/G,GAAI8G,cAA7C,QAAuD9D,EAAQ8D,OACxD9D,KAIX,SAASC,EAAQjD,GAAK,IAAD,EACnB,MAAO,CACLgH,KAAM,GACND,QAAM,mBACH,YAAc/G,EAAK,CAClBiH,MAAOC,EAASlH,KAFd,cAIH,UAAYA,EAAK,CAChBiH,MAAOC,EAASlH,EAAK,KALnB,cAOH,YAAcA,EAAK,CAClBiH,MAAOC,EAASlH,EAAK,KARnB,cAUH,aAAeA,EAVZ,aAWFiH,MAAOC,EAASlH,EAAK,IAjSd,SAkSGmH,IAAQC,oBAZhB,cAeH,YAAcpH,EAAK,CAClBiH,MAAOC,EAASlH,EAAK,KAhBnB,cAkBH,YAAcA,EAlBX,aAmBFiH,MAAOC,EAASlH,EAAK,IAzSd,SA0SGmH,IAAQC,oBApBhB,cAuBH,UAAYpH,EAAK,CAChBiH,MAAOC,EAASlH,EAAK,KAxBnB,cA0BH,UAAYA,EA1BT,aA2BFiH,MAAOC,EAASlH,EAAK,IAjTd,SAkTGmH,IAAQC,oBA5BhB,cA+BH,WAAapH,EAAK,CACjBiH,MAAOC,EAASlH,EAAK,KAhCnB,cAmCH,YAAcA,EAnCX,aAoCFiH,MAAOC,EAASlH,EAAK,IA1Td,SA2TGmH,IAAQC,oBArChB,GAyCNP,WAAY,CACV/E,SAAU,CAAC,YAAc9B,EAAI,YAAcA,EAAI,YAAcA,EAAI,YAAcA,GAC/EgC,OAAQ,CAAC,UAAYhC,EAAI,UAAYA,EAAI,UAAYA,EAAI,UAAYA,GACrEiC,SAAU,CAAC,WAAajC,EAAI,YAAcA,GAC1CkC,UAAW,CAAC,YAAclC,EAAI,aAAeA,KAKnD,SAASkH,EAASlH,GAChB,MAAO,CACLS,EAAIT,EA3UQ,EADE,GA6UdU,EA7Uc,GA6UVsD,KAAKC,MAAMjE,EA5UH,GA6UZqH,EA9Uc,GA+UdC,EA/Uc,IAmVlB,SAAS7B,EAAY8B,GACnB,IAAI7H,EAAU,KAgBd,MAdc,CACZiF,MAMF,WACE,GAAI4C,IAEF,OADA7H,KACO,GART6F,QAAS,IAAI9F,SAAQ,SAAA8H,GACnB7H,EAAU6H,MAchB,IAAIzE,EAAY,KACZiC,EAAmB,KACjBhC,EAAa,GC5WZ,SAAeyE,EAAtB,kC,4CAAO,WAA4BlJ,GAA5B,MASIqC,EAKAC,EAKAC,EAKAK,EAUAuG,EAMAC,EAxCJ,mBAAApG,EAAA,6DAwCIoG,EAxCJ,WAwCgB,IAAD,EACZhD,EAAQiD,EAAOvD,SAASD,KAAKuD,WAArB,UAAiCC,EAAOvD,SAASD,KAAK5C,iBAAtD,aAAiC,EAAgCsD,WAAW6C,UACtFhD,GACFpG,EAAKgF,MAAMsE,OAAOlD,MATb+C,EAlCJ,YAkCyB,IAATtD,EAAQ,EAARA,KACfA,EAAKO,OACPpG,EAAKgF,MAAMsE,OAAOzD,EAAKO,UAZlBxD,EAxBJ,SAwBgB2G,GACnBC,EAAqBD,GADQ,IAGrB1D,EAASwD,EAAOvD,SAAhBD,KACR,GAAIA,EAAKe,UAAYf,EAAKgB,MAAO,CAAC,IAAD,EAChBhB,EAAKX,SAASuE,MAAM,KADJ,mBACxBtH,EADwB,KACrBC,EADqB,KAE/BpC,EAAKgF,MAAM0E,YAAY7D,EAAKe,SAAUf,EAAKgB,MAAO,CAAE1E,EAAGA,EAAIgC,IAAM/B,EAAGA,EAAI+B,QAXnE5B,EAnBJ,SAmBS0B,GACRoF,EAAOpF,YAAcA,GAAaoF,EAAOtF,QAAU/B,EAAaM,EAAK2B,GACpE0F,EAAc1F,IAPZ3B,EAdJ,SAcS2B,GACZ2F,EAAc3F,GACd4F,EAAcC,YAAW,kBAAMvH,EAAK0B,KAAY,KAPzC5B,EATJ,SASU4B,GACb8F,EAAe9F,GACf+F,aAAaH,IAXV,SACgB5H,EACnBjC,EACAQ,IAAWC,OACXT,EAAKwH,IAAIyC,MACTjK,EAAKwH,IAAI0C,OAAOhG,MAAQ,EAAIC,IAAO,EACnCnE,EAAKwH,IAAI0C,OAAO9F,OAAS,EAAID,IAAO,GANjC,cACCkF,EADD,OAgDGM,EAIJN,EAJF9G,KACMqH,EAGJP,EAHF/G,KACOyH,EAELV,EAFFhH,MACamH,EACXH,EADFzG,YAGFyG,EAAOD,SAAWA,EAClBC,EAAOhH,MAAQA,EACfgH,EAAO/G,KAAOA,EACd+G,EAAO9G,KAAOA,EACd8G,EAAOzG,YAAcA,EACrByG,EAAO5G,WAAa,aACpB4G,EAAOrC,iBAAmBmC,EAEtBU,EAAc,KA9Db,kBAgEER,GAhEF,6C,qDCIA,SAAec,EAAtB,kC,4CAAO,WAA2BnK,GAA3B,MA8BIwC,EAQAkH,EAQM9B,EA9CV,EA6DUwC,EA7DV,EAoGInF,EAYAoF,EA0BAC,EA1IJ,aAAAtH,EAAA,6DA0IIsH,EA1IJ,YA0I8F,IAA7EC,EAA4E,EAA5EA,KAAMC,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,cAAeC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAAY,EAClE5F,EAAMa,KAA5BgF,EADwF,EACxFA,SAAUC,EAD8E,EAC9EA,QAElBP,EAAKQ,QAAQC,QAAb,uCAAqB,WAAMC,GAAN,iCAAAjI,EAAA,yDACXkI,EAAQD,EAARC,IACHV,EAAS,MAAMU,EAAMV,EAAS,GAAGW,UAFnB,iBAGXzJ,EAAKwJ,EAAMV,EAAS,GAAGW,SACvBC,EAAS1J,EAAKoJ,EAAWD,EACzBQ,EAAQ3F,KAAKC,MAAMjE,EAAKoJ,GAAWD,EACnC1I,EAAI8I,EAAO9I,EAAI0I,EACfzI,EAAI6I,EAAO7I,EAAIyI,EAAW,EAEhCJ,EAAc,GAAD,OAAItI,EAAJ,YAASC,IAAtB,eAAmC4C,EAAMa,KAAKyF,MAAM5J,IAAO,GAA3D,GAAmEuJ,EAAO1E,WAAWgF,OAAOC,EAAe,KAE3GC,EAAW,CACT/G,QAASM,EAAMN,QACf5D,IAAK6J,EACLS,QACAC,QACAlJ,IACAC,IACAyI,aAlBe,+BAqBXnJ,EAAKwJ,EAAMV,EAAS,GAAGW,SACvBlE,EAAUhF,EAAgB+C,EAAMhF,KAAM0B,EAAIiJ,EAAaxG,IAAO8G,EAAO9I,EAAI0I,EAAU1G,KAAQ8G,EAAO7I,EAAIyI,EAAW,IACvHD,EAASc,KAAKzE,GAERV,EAAa0E,EAAO1E,WAAa0E,EAAO1E,WAAWgF,OAAOC,EAAe,IAAM,GAzBpE,UA2BOvE,EA3BP,SA2BXhE,EA3BW,QA4BPsD,WAAV,eAA4BA,EAA5B,GAA2CtD,EAAUsD,YAErDmE,EAAmBhJ,GAAMuB,EA9BR,4CAArB,wDA7BOoH,EAhHJ,YAgHqE,IAAtDE,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,cAAeE,EAAsB,EAAtBA,YAAazG,EAAS,EAATA,MAAS,EACzCc,EAAMa,KAA5BgF,EAD+D,EAC/DA,SAAUC,EADqD,EACrDA,QAElBP,EAAK1E,KAAKmF,SAAQ,SAAC7K,EAAOwL,GACxB,GAAKxL,EAAL,CACA,IAAMuB,EAAKkK,SAASzL,EAAO,IAAMqK,EAAS,GAAGW,SACvCF,EAASjG,EAAMa,KAAKyF,MAAM5J,IAAO,GACjCS,EAAKwJ,EAAQzH,EACb9B,EAAIsD,KAAKC,MAAMgG,EAAQzH,GACvBkH,EAAS1J,EAAKoJ,EAAWD,EACzBQ,EAAQ3F,KAAKC,MAAMjE,EAAKoJ,GAAWD,EAEzCJ,EAAc,GAAD,OAAItI,EAAJ,YAASC,IAAO6I,EAE7BQ,EAAW,CACT/G,QAASM,EAAMN,QACf5D,IAAK6J,EACLS,QACAC,QACAlJ,IACAC,IACAyI,kBAjCG5F,EApGJ,SAoGW9C,EAAGC,EAAGyD,GACpB,IAAMyC,EAAG,UAAMnG,EAAN,YAAWC,GACdkJ,EAAQtG,EAAMsG,MAAM1E,EAAWC,GACrC,OAAKyE,GACAA,EAAMhD,KAAMgD,EAAMhD,GAAO,IAC1BzC,IACFyF,EAAMhD,GAAN,eAAkBgD,EAAMhD,GAAxB,GAAiCzC,IAE5ByF,EAAMhD,IALM,IAvGhB,oCAAAtF,EAAA,MA6DL,WAA+BkC,GAA/B,uCAAAlC,EAAA,yDACQ6I,EAAe,OAAO,YAAW7G,EAAM4B,SAAxB,YAAoC5B,EAAM6B,QAASiF,OAAM,iBAAO,MAE7ElF,EAAoB5B,EAApB4B,SAAUC,EAAU7B,EAAV6B,MACd8D,EAAc3F,EAAMlE,IAAI8F,EAAWC,GACnC6D,EAAqB1F,EAAMP,WAAWmC,EAAWC,GAEhD8D,EAPP,wBAQUF,EAAgB,GACtBE,EAAc,IAAIoB,IAClBrB,EAAqB,GAVzB,UAY8C,OAAO,YAAQ9D,EAAf,UAZ9C,wBAYYoF,EAZZ,EAYYA,OAAQxB,EAZpB,EAYoBA,SAAUtG,EAZ9B,EAY8BA,MACpB0G,EAAW,GAEjBoB,EAAOhB,SAAQ,SAAAT,GACTA,EAAKhK,OAASsG,IAEA,cAAd0D,EAAK0B,MAAsB5B,EAAS,CAAEE,OAAMC,WAAUC,gBAAeE,cAAazG,UAEpE,gBAAdqG,EAAK0B,MAAwB3B,EAAW,CAAEC,OAAMC,WAAUC,gBAAeC,qBAAoBC,cAAaC,iBApBpH,UAuBUzJ,QAAQQ,IAAIiJ,GAvBtB,QAyBI5F,EAAMlE,IAAI8F,EAAWC,GAAS8D,EAC9B3F,EAAMsG,MAAM1E,EAAWC,GAAS4D,EAChCzF,EAAMP,WAAWmC,EAAWC,GAAS6D,EA3BzC,yBA8B8BmB,EA9B9B,iBA8BU9L,EA9BV,EA8BUA,UAERiF,EAAMsE,OAASvJ,EAAYA,EAAUC,GAAQ,KAC7CgF,EAAMkH,OAAOC,iBACbnH,EAAMkH,OAAO5H,SAASqG,GACtB3F,EAAMhF,KAAKyE,WAAaiG,EACpBxF,IAAUF,EAAMhF,KAAKqJ,OAAOnE,SAAWA,GApC7C,6CA7DK,uBA6DUkF,EA7DV,gFAAApH,EAAA,MA8CL,4BAAAA,EAAA,sEACwBoJ,IADxB,cACQ1H,EADR,OAEEM,EAAMN,QAAUA,EAChBM,EAAMa,KAAO,CACXgF,SAAUwB,EAAUC,UACpBxB,QAASuB,EAAUvB,QACnBQ,MAAOe,EAAUf,MAAMC,QAAO,SAACgB,EAAKC,GAElC,OADAD,EAAIC,EAAK9K,IAAM8K,EAAKjG,WAAWgF,OAAOC,EAAe,IAC9Ce,IACN,KATP,SAWQnC,IAXR,OAYEpF,EAAMhF,KAAKyM,gBAAiB,EAZ9B,4CA9CK,uBA8CU7E,EA9CV,2CAsCI8B,EAtCJ,SAsCgB9C,EAAUC,EAAO3B,GACpCF,EAAM4B,SAAWA,GAAY5B,EAAM4B,SACnC5B,EAAM6B,MAAQA,GAAS,QACvBzG,IAAS2G,QAAQ,WAAY/B,EAAM4B,UACnCxG,IAAS2G,QAAQ,QAAS/B,EAAM6B,OAChCuD,EAAgBlF,IAbT1C,EA9BJ,WA8Bc,IAAD,IACV0C,EAAWF,EAAMhF,KAAKqJ,OAAOnE,SACnCF,EAAMkH,OAAOQ,MAAMvK,IAAI,UAAC6C,EAAMhF,KAAKqJ,OAAOxF,cAAnB,aAAC,EAA0B1B,GAClD6C,EAAMkH,OAAOQ,MAAMtK,IAAI,UAAC4C,EAAMhF,KAAKqJ,OAAOxF,cAAnB,aAAC,EAA0BzB,GAClD4C,EAAMkH,OAAOhH,SAAS/C,GAAK+C,EAAS/C,EACpC6C,EAAMkH,OAAOhH,SAAS9C,GAAK8C,EAAS9C,GAnCjC,KAEHpC,EAFG,KAGHwC,EAHG,KAIHyC,EAJG,KAKHyE,EALG,KAMH9B,EANG,KAwBE,GAxBF,KAyBI,GAzBJ,KA0BS,GA1BT,KA2BK,IAAImE,IA1BR/G,EADD,CAEHhF,KAFG,KAGHwC,OAHG,KAIHyC,OAJG,KAKHyE,YALG,KAMH9B,KANG,KAOH0B,OAAQ,KACR,eACE,OAAO1C,GAET,aAAa+F,GACX/F,EAAW+F,EACXvM,IAAS2G,QAAQ,WAAY4F,IAE/B,YACE,OAAO9F,GAET,UAAU+F,GACR/F,EAAQ+F,EACRxM,IAAS2G,QAAQ,QAAS6F,IAE5BlI,QAAS,KACTmB,KAAM,KACN/E,IAxBG,KAyBHwK,MAzBG,KA0BH7G,WA1BG,KA2BHyH,OA3BG,MAgLLlM,EAAKwH,IAAIyC,MAAM4C,WAAW7H,EAAMkH,OAAQ,GAExClM,EAAKwH,IAAIC,OAAOC,IAAIlF,EAAQ,KAAMsK,IAAgBC,aAE9CnG,EAAW,KACXC,EAAQ,KArLP,kBAuLE7B,GAvLF,6C,sBA0LP,SAASoH,IACP,OAAO,IAAIjL,SAAQ,SAAAC,IACjB,IAAIuG,KAASD,IAAI,QAASsF,KAAcpF,MAAK,SAACC,EAAQrD,GACpDpD,EAAQoD,EAAUQ,MAAMN,eAK9B,SAAS+G,EAAT,GAAqE,IAA/C/G,EAA8C,EAA9CA,QAAS5D,EAAqC,EAArCA,IAAKsK,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOlJ,EAAkB,EAAlBA,EAAGC,EAAe,EAAfA,EAAGyI,EAAY,EAAZA,SAChDoC,EAAW,IAAIC,IAErBD,EAASE,iBAAiB,CAAEzI,YAC5BuI,EAASG,SAAShC,EAAOC,EAAOR,EAAUA,GAE1CoC,EAAS/I,MAAQC,IACjB8I,EAAS7I,OAASD,IAElB8I,EAAS9K,GAAKiJ,EAAQ6B,EAASI,MAAMlL,EAAIA,EAAIgC,IAC7C8I,EAAS7K,GAAKiJ,EAAQ4B,EAASI,MAAMjL,EAAIA,EAAI+B,IAE7CrD,EAAIwD,SAAS2I,GAGf,SAASzB,EAAce,EAAKe,GAE1B,OADAf,EAAIe,EAAS/M,MAAQ+M,EAASnN,MACvBoM,ECnNF,SAAegB,EAAtB,kC,4CAAO,wBAcIC,EAdJ,WAAAxK,EAAA,6DAcIwK,EAdJ,YAc8B,IAAXC,EAAU,EAAVA,OACjBzN,EAAKyM,gBAIRzM,EAAK0N,OAASD,EAGhBzN,EAAKqJ,OAAOhH,QAEZrC,EAAK0N,OAAO1C,SAAQ,SAAA0C,GAClB,OAAQA,GACN,KAAK3H,IAASI,GACd,KAAKJ,IAASE,KACd,KAAKF,IAASC,MACd,KAAKD,IAASG,KACZlG,EAAKqJ,OAAO9G,KAAKmL,GACjB,MAGF,KAAK3H,IAAS4H,EACZ3N,EAAKqJ,OAAOD,gBAnBhBpJ,EAAK0N,OAAS,IAhBeE,EAA5B,EAA4BA,KAAM1N,EAAlC,EAAkCA,YACjCF,EAAO,CACXE,aACAoJ,OAAQ,KACR9B,IAAK,KACLkG,OAAQ,GACRrE,OAAQ,KACRrE,MAAO,KACPP,WAAY,GACZgI,gBAAgB,IAGbnD,OAASvJ,oBAAUC,GAZnB,SA+CaI,IAASkH,QAAQ,YA/C9B,mCAgDalH,IAASkH,QAAQ,YAhD9B,oCAiDUlH,IAASkH,QAAQ,SAjD3B,2BA8CCuG,EA9CD,CA+CH3I,SA/CG,KAgDH0B,SAhDG,KAiDHC,MAjDG,gBAoDCiH,EAAY9N,EAAM4N,GApDnB,QAsDAC,EAAK3I,UAMRlF,EAAKgF,MAAM4B,SAAWiH,EAAKjH,SAC3B5G,EAAKgF,MAAM6B,MAAQgH,EAAKhH,QANxB7G,EAAKsJ,OAAOrJ,UACZD,EAAKqJ,OAAOnE,SAAW,CAAE/C,EAAU,EAAPgC,IAAU/B,EAAU,EAAP+B,KACzCnE,EAAKgF,MAAM4B,SAAW,kBACtB5G,EAAKgF,MAAM6B,MAAQ,aAMrB7G,EAAKgF,MAAM4C,OAEXmG,OAAOC,iBAAiB,SAAUR,GAlE7B,6C,+BAqEQM,E,gFAAf,WAA2B9N,EAAM4N,GAAjC,SAAA5K,EAAA,6DACEiL,IAAMC,YACNC,IAASC,WAAaC,IAAYC,QAElCtO,EAAKwH,IAAM,IAAI+G,IAAY,CACzBX,OACA1J,MAAO,KACPE,OAAQ,OAGVpE,EAAKwH,IAAIgH,SAASC,QAAQC,cAAcC,iBACjC3O,EAAKwH,IAAIgH,SAASC,QAAQG,aAXnC,SAasB1F,EAAalJ,GAbnC,cAaEA,EAAKqJ,OAbP,iBAcqBc,EAAYnK,GAdjC,QAcEA,EAAKgF,MAdP,oD","file":"static/js/6.fe705c6e.chunk.js","sourcesContent":["export function getEvents(game) {\n  const events = {\n    welcome() {\n      game.setMessage({\n        value: `\n        Bienvenido al mundo pokemon, todo parecido con el original es pura coincidencia. Ahora haz como que quieres salir de Pueblo Paleta\n        para empezar la historia.\n        ` })\n    }\n  }\n\n  return events\n}","import localForage from \"localforage\"\nimport { CHARACTERS } from \"./constants\"\n\nexport const playerDB = localForage.createInstance({ name: CHARACTERS.PLAYER, storeName: \"index\" })\n\nexport function getEventsDB(storeName) {\n  return localForage.createInstance({ name: \"events\", storeName })\n}","module.exports = __webpack_public_path__ + \"static/media/characters.52805807.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","var map = {\n\t\"./\": [\n\t\t108\n\t],\n\t\"./PalletTown\": [\n\t\t109,\n\t\t0\n\t],\n\t\"./PalletTown/\": [\n\t\t109,\n\t\t0\n\t],\n\t\"./PalletTown/index\": [\n\t\t109,\n\t\t0\n\t],\n\t\"./PalletTown/index.js\": [\n\t\t109,\n\t\t0\n\t],\n\t\"./PalletTownRooms/laboratory\": [\n\t\t116,\n\t\t1\n\t],\n\t\"./PalletTownRooms/laboratory.js\": [\n\t\t116,\n\t\t1\n\t],\n\t\"./index\": [\n\t\t108\n\t],\n\t\"./index.js\": [\n\t\t108\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 134;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./PalletTown.json\": [\n\t\t136,\n\t\t7\n\t],\n\t\"./PalletTownRooms.json\": [\n\t\t137,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 135;\nmodule.exports = webpackAsyncContext;","import { Spritesheet, AnimatedSprite, Loader, groupD8 } from \"pixi.js\"\nimport localForage from \"localforage\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED, CHARACTERS } from \"libraries/constants\"\n\nconst TILE_SIZE = 16\nconst COLUMNS = 8\nconst ROTATE = \"rotate\"\n\nexport const STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nexport async function createCharacter(game, id, container, x, y) {\n  if (!resources && !loadingResources) {\n    loadingResources = await loadResources()\n  }\n\n  const database = localForage.createInstance({ name: id, storeName: id !== CHARACTERS.PLAYER ? game.world.location + game.world.layer : \"index\" })\n\n  const character = {\n    database,\n    game,\n    collision: true,\n    still,\n    face,\n    walk,\n    updateState,\n    get properties() {\n      return properties\n    },\n    set properties(value) {\n      Object.assign(properties, value)\n      database.setItem(\"properties\", properties)\n\n      character.sprite.visible = properties.visible !== false\n    },\n    postUpdate,\n    onNextTileUpdate: () => { },\n    get event() {\n      return event.promise\n    },\n    set event(newEvent) {\n      event = createEvent(newEvent)\n    },\n    sprite: null,\n    state: STATES.STILL,\n    direction: CONTROLS.DOWN,\n    speed: { x: 0, y: 0 },\n    nextDirection: null,\n    nextState: null,\n    get nextTile() {\n      return nextTile\n    },\n    set nextTile(newValue) {\n      nextTile = newValue\n      character.onNextTileUpdate(newValue)\n    },\n    get position() {\n      return position\n    },\n    set position(newPosition) {\n      game.world.tileAt(position.x / SIZE, position.y, { character: null })\n      nextTile = { data: {} }\n\n      position.x = newPosition.x\n      position.y = newPosition.y\n    },\n\n    // common fields for all characters with same id\n    spritesheet: characters[id]?.spritesheet,\n    textures: characters[id]?.textures || {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still(direction) {\n    character.nextState = STATES.STILL\n    if (direction) character.nextDirection = direction\n  }\n\n  function face(direction) {\n    character.nextDirection = direction\n  }\n\n  function walk(direction) {\n    face(direction)\n    character.nextState = STATES.WALK\n  }\n\n  function update() {\n    const speedX = character.direction === CONTROLS.RIGHT ? 1 : character.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = character.direction === CONTROLS.DOWN ? 1 : character.direction === CONTROLS.UP ? -1 : 0\n\n    if (!character.speed.x && !character.speed.y) updateNextTile(speedX, speedY)\n\n    if (event && event.check()) {\n      event = null\n    }\n\n    if (\n      character.state === STATES.WALK &&\n      !character.speed.x && !character.speed.y &&\n      character.nextTile.data.collision === false &&\n      (character.nextTile.data.character?.properties.visible === false || character.nextTile.data.character?.collision !== true)\n    ) {\n      character.speed.x = speedX\n      character.speed.y = speedY\n      updatePosition(character.speed.x ? \"x\" : \"y\", true)\n    } else if (character.speed.x || character.speed.y) {\n      updatePosition(character.speed.x ? \"x\" : \"y\")\n    } else {\n      updateState()\n    }\n\n    updateTextures()\n    character.postUpdate()\n  }\n\n  function postUpdate() {\n    character.sprite.x = position.x\n    character.sprite.y = position.y\n  }\n\n  function updateNextTile(speedX, speedY) {\n    const nextX = Math.floor(position.x / SIZE + speedX)\n    const nextY = Math.floor(position.y / SIZE + speedY)\n\n    const data = character.game.world.tileAt(nextX, nextY)\n\n    character.nextTile = {\n      x: nextX,\n      y: nextY,\n      data,\n    }\n  }\n\n  function updatePosition(dimension, move) {\n    if (!character.speed[dimension]) return\n\n    const speed = character.speed[dimension] * SPEED\n    const remainder = position[dimension] % SIZE\n\n    if (remainder || move) {\n      position[dimension] += speed\n    } else {\n      character.speed[dimension] = 0\n      character.updateState()\n    }\n  }\n\n  function updateState() {\n    if (character.nextDirection) {\n      character.direction = character.nextDirection\n      character.nextDirection = null\n    }\n\n    if (character.nextState) {\n      character.state = character.nextState\n      character.nextState = null\n    }\n\n    game.world.tileAt(position.x / SIZE, position.y / SIZE, { character })\n  }\n\n  function updateTextures() {\n    if (!character.sprite) return\n    const textures = character.textures[character.state + upperCase(character.direction)]\n    if (!textures || character.sprite.textures === textures) return\n    character.sprite.textures = textures\n    character.sprite.play()\n  }\n\n  function addSpritesheet() {\n    const spritesheet = new Spritesheet(resources.characters.texture, getData(id))\n    character.spritesheet = spritesheet\n\n    spritesheet.parse(() => {\n      loadSprite()\n    })\n  }\n\n  function loadSprite() {\n    character.textures.stillDown = [character.spritesheet.textures[\"stillDown\" + id]]\n    character.textures.stillUp = [character.spritesheet.textures[\"stillUp\" + id]]\n    character.textures.stillLeft = [character.spritesheet.textures[\"stillLeft\" + id]]\n    character.textures.stillRight = [character.spritesheet.textures[\"stillRight\" + id]]\n\n    character.textures.walkDown = getTextures(character.spritesheet, \"walkDown\")\n    character.textures.walkUp = getTextures(character.spritesheet, \"walkUp\")\n    character.textures.walkLeft = getTextures(character.spritesheet, \"walkLeft\")\n    character.textures.walkRight = getTextures(character.spritesheet, \"walkRight\")\n\n    const sprite = new AnimatedSprite(character.textures[character.state + upperCase(character.direction)])\n    character.sprite = sprite\n\n    sprite.width = SIZE\n    sprite.height = SIZE\n    sprite.animationSpeed = 0.1\n    sprite.x = x\n    sprite.y = y\n\n    container.addChild(sprite)\n  }\n\n  let event = null\n  let nextTile = { data: {} }\n  const properties = await database.getItem(\"properties\") || {}\n  const position = await createPosition(character, database, x, y)\n\n  if (!characters[id]) addSpritesheet()\n  else loadSprite()\n\n  character.game.app.ticker.add(update)\n\n  characters[id] = character\n\n  return character\n}\n\nasync function loadResources() {\n  return new Promise(resolve => {\n    new Loader().add(\"characters\", texture).load((loader, loadedResources) => {\n      resources = loadedResources\n      resolve()\n    })\n  })\n}\n\nasync function createPosition(character, database, startX, startY) {\n  function removeCharacter() {\n    character.game.world.tileAt(position.x / SIZE, position.y / SIZE, { character: null })\n  }\n\n  const positionDB = await database.getItem(\"position\")\n  let x = positionDB?.x ?? startX\n  let y = positionDB?.y ?? startY\n\n  const position = {\n    get x() {\n      return x\n    },\n    set x(newX) {\n      if (x % SIZE === 0) removeCharacter()\n\n      x = newX\n      if (x % SIZE === 0) {\n        database.setItem(\"position\", { ...position, x })\n      }\n    },\n    get y() {\n      return y\n    },\n    set y(newY) {\n      if (y % SIZE === 0) removeCharacter()\n\n      y = newY\n      if (y % SIZE === 0) {\n        database.setItem(\"position\", { ...position, y })\n      }\n    }\n  }\n\n  return position\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nfunction getData(id) {\n  return {\n    meta: {},\n    frames: {\n      [\"stillDown\" + id]: {\n        frame: getFrame(id),\n      },\n      [\"stillUp\" + id]: {\n        frame: getFrame(id + 1),\n      },\n      [\"stillLeft\" + id]: {\n        frame: getFrame(id + 2),\n      },\n      [\"stillRight\" + id]: {\n        frame: getFrame(id + 2),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkDown0\" + id]: {\n        frame: getFrame(id + 3)\n      },\n      [\"walkDown1\" + id]: {\n        frame: getFrame(id + 3),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkUp0\" + id]: {\n        frame: getFrame(id + 4),\n      },\n      [\"walkUp1\" + id]: {\n        frame: getFrame(id + 4),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkLeft\" + id]: {\n        frame: getFrame(id + 5),\n      },\n\n      [\"walkRight\" + id]: {\n        frame: getFrame(id + 5),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n    },\n\n    animations: {\n      walkDown: [\"walkDown0\" + id, \"stillDown\" + id, \"walkDown1\" + id, \"stillDown\" + id],\n      walkUp: [\"walkUp0\" + id, \"stillUp\" + id, \"walkUp1\" + id, \"stillUp\" + id],\n      walkLeft: [\"walkLeft\" + id, \"stillLeft\" + id],\n      walkRight: [\"walkRight\" + id, \"stillRight\" + id],\n    },\n  }\n}\n\nfunction getFrame(id) {\n  return {\n    x: (id % COLUMNS) * TILE_SIZE,\n    y: (Math.floor(id / COLUMNS)) * TILE_SIZE,\n    w: TILE_SIZE,\n    h: TILE_SIZE,\n  }\n}\n\nfunction createEvent(callback) {\n  let resolve = null\n\n  const event = {\n    check,\n    promise: new Promise(callback => {\n      resolve = callback\n    }),\n  }\n\n  function check() {\n    if (callback()) {\n      resolve()\n      return true\n    }\n  }\n\n  return event\n}\n\nlet resources = null\nlet loadingResources = null\nconst characters = {}","import { SIZE, CHARACTERS } from \"libraries/constants\"\nimport { createCharacter, STATES } from \"./Character\"\n\nexport async function createPlayer(game) {\n  const player = await createCharacter(\n    game,\n    CHARACTERS.PLAYER,\n    game.app.stage,\n    game.app.screen.width / 2 - SIZE / 2,\n    game.app.screen.height / 2 - SIZE / 2,\n  )\n\n  function still(direction) {\n    characterStill(direction)\n    clearTimeout(faceTimeout)\n  }\n\n  function face(direction) {\n    characterFace(direction)\n    faceTimeout = setTimeout(() => walk(direction), 50)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) face(direction)\n    else characterWalk(direction)\n  }\n\n  function updateState(prevTile) {\n    characterUpdateState(prevTile)\n\n    const { data } = player.nextTile\n    if (data.location || data.layer) {\n      const [x, y] = data.position.split(\",\")\n      game.world.setLocation(data.location, data.layer, { x: x * SIZE, y: y * SIZE })\n    }\n  }\n\n  function loadEvent({ data }) {\n    if (data.event) {\n      game.world.events[data.event]()\n    }\n  }\n\n  function interact() {\n    const event = player.nextTile.data.interact || player.nextTile.data.character?.properties.interact\n    if (event) {\n      game.world.events[event]()\n    }\n  }\n\n  const {\n    walk: characterWalk,\n    face: characterFace,\n    still: characterStill,\n    updateState: characterUpdateState,\n  } = player\n\n  player.interact = interact\n  player.still = still\n  player.face = face\n  player.walk = walk\n  player.updateState = updateState\n  player.postUpdate = () => { }\n  player.onNextTileUpdate = loadEvent\n\n  let faceTimeout = null\n\n  return player\n}","import { Graphics, Loader, Container, UPDATE_PRIORITY } from \"pixi.js\"\nimport worldTexture from \"images/world.png\"\nimport worldData from \"images/data/world.json\"\nimport { SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { createCharacter } from \"./Character\"\n\nexport async function createWorld(game) {\n  const world = {\n    game,\n    update,\n    tileAt,\n    setLocation,\n    load,\n    events: null,\n    get location() {\n      return location\n    },\n    set location(newLocation) {\n      location = newLocation\n      playerDB.setItem(\"location\", newLocation)\n    },\n    get layer() {\n      return layer\n    },\n    set layer(newLayer) {\n      layer = newLayer\n      playerDB.setItem(\"layer\", newLayer)\n    },\n    texture: null,\n    data: null,\n    map: {},\n    tiles: {},\n    characters: {},\n    camera: new Container(),\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  function setLocation(location, layer, position) {\n    world.location = location || world.location\n    world.layer = layer || \"index\"\n    playerDB.setItem(\"location\", world.location)\n    playerDB.setItem(\"layer\", world.layer)\n    loadMapLocation(position)\n  }\n\n  async function load() {\n    const texture = await loadTexture()\n    world.texture = texture\n    world.data = {\n      tileSize: worldData.tilewidth,\n      columns: worldData.columns,\n      tiles: worldData.tiles.reduce((acc, tile) => {\n        acc[tile.id] = tile.properties.reduce(addProperties, {})\n        return acc\n      }, {})\n    }\n    await loadMapLocation()\n    world.game.enableControls = true\n  }\n\n  async function loadMapLocation(position) {\n    const eventsImport = import(`scripts/${world.location}/${world.layer}`).catch(() => ({}))\n\n    const { location, layer } = world\n    let locationMap = world.map[location + layer]\n    let locationCharacters = world.characters[location + layer]\n\n    if (!locationMap) {\n      const locationTiles = {}\n      locationMap = new Container()\n      locationCharacters = {}\n\n      const { layers, tilesets, width } = await import(`maps/${location}.json`)\n      const promises = []\n\n      layers.forEach(item => {\n        if (item.name !== layer) return\n\n        if (item.type === \"tilelayer\") loadTile({ item, tilesets, locationTiles, locationMap, width })\n\n        if (item.type === \"objectgroup\") loadObject({ item, tilesets, locationTiles, locationCharacters, locationMap, promises })\n      })\n\n      await Promise.all(promises)\n\n      world.map[location + layer] = locationMap\n      world.tiles[location + layer] = locationTiles\n      world.characters[location + layer] = locationCharacters\n    }\n\n    const { getEvents } = await eventsImport\n\n    world.events = getEvents ? getEvents(game) : null\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n    world.game.characters = locationCharacters\n    if (position) world.game.player.position = position\n  }\n\n  function tileAt(x, y, data) {\n    const key = `${x}-${y}`\n    const tiles = world.tiles[location + layer]\n    if (!tiles) return {}\n    if (!tiles[key]) tiles[key] = {}\n    if (data) {\n      tiles[key] = { ...tiles[key], ...data }\n    }\n    return tiles[key]\n  }\n\n\n  function loadTile({ item, tilesets, locationTiles, locationMap, width }) {\n    const { tileSize, columns } = world.data\n\n    item.data.forEach((value, index) => {\n      if (!value) return\n      const id = parseInt(value, 10) - tilesets[0].firstgid\n      const object = world.data.tiles[id] || {}\n      const x = (index % width)\n      const y = Math.floor(index / width)\n      const tileX = (id % columns) * tileSize\n      const tileY = Math.floor(id / columns) * tileSize\n\n      locationTiles[`${x}-${y}`] = object\n\n      addGraphic({\n        texture: world.texture,\n        map: locationMap,\n        tileX,\n        tileY,\n        x,\n        y,\n        tileSize,\n      })\n    })\n  }\n\n  function loadObject({ item, tilesets, locationTiles, locationCharacters, locationMap, promises }) {\n    const { tileSize, columns } = world.data\n\n    item.objects.forEach(async object => {\n      const { gid } = object\n      if (!tilesets[1] || gid < tilesets[1].firstgid) {\n        const id = gid - tilesets[0].firstgid\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n        const x = object.x / tileSize\n        const y = object.y / tileSize - 1\n\n        locationTiles[`${x}-${y}`] = { ...(world.data.tiles[id] || {}), ...object.properties.reduce(addProperties, {}) }\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x,\n          y,\n          tileSize,\n        })\n      } else {\n        const id = gid - tilesets[1].firstgid\n        const promise = createCharacter(world.game, id, locationMap, SIZE * object.x / tileSize, SIZE * (object.y / tileSize - 1))\n        promises.push(promise)\n\n        const properties = object.properties ? object.properties.reduce(addProperties, {}) : {}\n\n        const character = await promise\n        character.properties = { ...properties, ...character.properties }\n\n        locationCharacters[id] = character\n      }\n    })\n  }\n\n  game.app.stage.addChildAt(world.camera, 0)\n\n  game.app.ticker.add(update, null, UPDATE_PRIORITY.INTERACTION)\n\n  let location = null\n  let layer = null\n\n  return world\n}\n\nfunction loadTexture() {\n  return new Promise(resolve => {\n    new Loader().add(\"world\", worldTexture).load((loader, resources) => {\n      resolve(resources.world.texture)\n    })\n  })\n}\n\nfunction addGraphic({ texture, map, tileX, tileY, x, y, tileSize }) {\n  const graphics = new Graphics()\n\n  graphics.beginTextureFill({ texture })\n  graphics.drawRect(tileX, tileY, tileSize, tileSize)\n\n  graphics.width = SIZE\n  graphics.height = SIZE\n\n  graphics.x = -tileX * graphics.scale.x + x * SIZE\n  graphics.y = -tileY * graphics.scale.y + y * SIZE\n\n  map.addChild(graphics)\n}\n\nfunction addProperties(acc, property) {\n  acc[property.name] = property.value\n  return acc\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS, SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { getEvents } from \"scripts\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nexport async function createGame({ view, setMessage }) {\n  const game = {\n    setMessage,\n    events: null,\n    app: null,\n    action: [],\n    player: null,\n    world: null,\n    characters: {},\n    enableControls: false,\n  }\n\n  game.events = getEvents(game)\n\n  function handleAction({ detail }) {\n    if (!game.enableControls) {\n      game.action = []\n      return\n    } else {\n      game.action = detail\n    }\n\n    game.player.still()\n\n    game.action.forEach(action => {\n      switch (action) {\n        case CONTROLS.UP:\n        case CONTROLS.LEFT:\n        case CONTROLS.RIGHT:\n        case CONTROLS.DOWN: {\n          game.player.walk(action)\n          break\n        }\n\n        case CONTROLS.A: {\n          game.player.interact()\n          break\n        }\n\n        default: {\n          break\n        }\n      }\n    })\n  }\n\n  const save = {\n    position: await playerDB.getItem(\"position\"),\n    location: await playerDB.getItem(\"location\"),\n    layer: await playerDB.getItem(\"layer\"),\n  }\n\n  await prepareGame(game, view)\n\n  if (!save.position) {\n    game.events.welcome()\n    game.player.position = { x: SIZE * 3, y: SIZE * 6 }\n    game.world.location = \"PalletTownRooms\"\n    game.world.layer = \"house1 f2\"\n  } else {\n    game.world.location = save.location\n    game.world.layer = save.layer\n  }\n\n  game.world.load()\n\n  window.addEventListener(\"action\", handleAction)\n}\n\nasync function prepareGame(game, view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.app.renderer.plugins.accessibility.destroy()\n  delete game.app.renderer.plugins.accesibility\n\n  game.player = await createPlayer(game)\n  game.world = await createWorld(game)\n}"],"sourceRoot":""}