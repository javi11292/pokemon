{"version":3,"sources":["images/characters.png","images/world.png","map lazy /^/.//.*/.txt$/ groupOptions: {} namespace object","images/data/player.js","game/Player.js","images/data/world.js","game/World.js","game/index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","meta","frames","stillDown","frame","x","SIZE","y","w","h","walkDown0","walkDown1","groupD8","MIRROR_HORIZONTAL","stillUp","walkUp0","walkUp1","stillLeft","walkLeft","stillRight","walkRight","animations","walkDown","walkUp","STATES","getTextures","spriteSheet","key","data","texture","textures","rotate","createPlayer","game","player","update","speedX","direction","CONTROLS","RIGHT","LEFT","speedY","DOWN","UP","state","speed","nextX","Math","floor","position","nextY","remainderX","remainderY","collision","tile","world","tileAt","hasWorldCollision","updatePosition","updateDirection","sprite","upperCase","play","setTextures","still","walk","nextDirection","setTimeout","action","face","dimension","move","SPEED","remainder","abs","offset","normalizedOffset","Loader","add","load","loader","resources","Spritesheet","characters","parse","AnimatedSprite","width","height","animationSpeed","app","screen","stage","addChild","COLLISION","0","name","1","2","3","4","5","6","7","8","9","a","b","c","d","f","g","i","j","createWorld","camera","pivot","children","length","getChildAt","getChildByName","location","Container","locationMap","url","default","fetch","response","text","split","forEach","row","value","graphics","Graphics","beginTextureFill","drawRect","scale","removeChildren","loadMapLocation","addChildAt","createGame","view","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","window","addEventListener","detail","ticker"],"mappings":"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","file":"static/js/4.1d53293c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","var map = {\n\t\"./PalletTown.txt\": [\n\t\t130,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 129;\nmodule.exports = webpackAsyncContext;","import { groupD8 } from \"pixi.js\"\n\nconst SIZE = 16\nconst ROTATE = \"rotate\"\n\nexport default {\n  meta: {},\n  frames: {\n    stillDown: {\n      frame: {\n        x: SIZE * 6,\n        y: SIZE * 14,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkDown0: {\n      frame: {\n        x: SIZE * 1,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkDown1: {\n      frame: {\n        x: SIZE * 1,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n\n    stillUp: {\n      frame: {\n        x: SIZE * 7,\n        y: SIZE * 14,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkUp0: {\n      frame: {\n        x: SIZE * 2,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkUp1: {\n      frame: {\n        x: SIZE * 2,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n\n\n    stillLeft: {\n      frame: {\n        x: SIZE * 0,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n    walkLeft: {\n      frame: {\n        x: SIZE * 3,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n    },\n\n    stillRight: {\n      frame: {\n        x: SIZE * 0,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n    walkRight: {\n      frame: {\n        x: SIZE * 3,\n        y: SIZE * 15,\n        w: SIZE,\n        h: SIZE,\n      },\n      [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n    },\n  },\n  animations: {\n    walkDown: [\"walkDown0\", \"stillDown\", \"walkDown1\", \"stillDown\"],\n    walkUp: [\"walkUp0\", \"stillUp\", \"walkUp1\", \"stillUp\"],\n    walkLeft: [\"walkLeft\", \"stillLeft\"],\n    walkRight: [\"walkRight\", \"stillRight\"],\n  },\n}","import { Spritesheet, AnimatedSprite, Loader } from \"pixi.js\"\nimport data from \"images/data/player\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\n\nconst STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nexport function createPlayer(game) {\n  const player = {\n    game,\n    update,\n    still,\n    walk,\n    sprite: null,\n    state: null,\n    direction: CONTROLS.DOWN,\n    nextDirection: null,\n    position: { x: SIZE * 10, y: SIZE * 3 },\n    speed: { x: 0, y: 0 },\n    collision: null,\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    player.state = STATES.STILL\n  }\n\n  function face(direction) {\n    setTimeout(() => {\n      player.direction = direction\n      if (direction === player.game.action) walk(direction)\n      else still()\n    }, 100)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) {\n      face(direction)\n      return\n    }\n\n    player.nextDirection = direction\n    player.state = STATES.WALK\n  }\n\n  function setTextures() {\n    if (!player.sprite) return\n    const textures = player.textures[player.state + upperCase(player.direction)]\n    if (!textures || player.sprite.textures === textures) return\n    player.sprite.textures = textures\n    player.sprite.play()\n  }\n\n  function updateDirection() {\n    if (player.nextDirection) {\n      player.direction = player.nextDirection\n      player.nextDirection = null\n    }\n  }\n\n  function updatePosition(dimension, move) {\n    if (!player.speed[dimension]) return\n\n    const speed = player.speed[dimension] * SPEED\n    const remainder = Math.abs(player.position[dimension] % SIZE)\n\n    const offset = remainder && (player.speed[dimension] === 1 ? remainder : SIZE - remainder)\n\n    if (remainder) {\n      const normalizedOffset = player.position[dimension] <= 0 ? offset : SIZE - offset\n      player.position[dimension] += normalizedOffset >= SPEED ? speed : normalizedOffset * player.speed[dimension]\n    } else if (move) {\n      player.position[dimension] += speed\n    } else {\n      player.speed[dimension] = 0\n      updateDirection()\n    }\n  }\n\n  function hasWorldCollision(speedX, speedY) {\n    const nextX = Math.floor(player.position.x / SIZE + speedX)\n    const nextY = Math.floor(player.position.y / SIZE + speedY)\n    const remainderX = player.position.x % SIZE\n    const remainderY = player.position.y % SIZE\n\n    if (remainderX || remainderY) return !!player.collision\n\n    if (!player.collision || nextX !== player.collision.x || nextY !== player.collision.y) {\n      const tile = player.game.world.tileAt(nextX, nextY)\n      if (!tile || tile.collision) {\n        player.collision = {\n          x: nextX,\n          y: nextY,\n        }\n      } else {\n        player.collision = null\n      }\n    }\n\n    return !!player.collision\n  }\n\n  function update() {\n    const speedX = player.direction === CONTROLS.RIGHT ? 1 : player.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = player.direction === CONTROLS.DOWN ? 1 : player.direction === CONTROLS.UP ? -1 : 0\n\n    if (player.state === STATES.WALK && !player.speed.x && !player.speed.y && !hasWorldCollision(speedX, speedY)) {\n      player.speed.x = speedX\n      player.speed.y = speedY\n      updatePosition(player.speed.x ? \"x\" : \"y\", true)\n    } else if (player.speed.x || player.speed.y) {\n      updatePosition(player.speed.x ? \"x\" : \"y\")\n    } else {\n      updateDirection()\n    }\n\n    setTextures()\n  }\n\n  function addSpriteSheet() {\n    new Loader().add(\"characters\", texture).load((loader, resources) => {\n      const spriteSheet = new Spritesheet(resources.characters.texture, data)\n\n      spriteSheet.parse(() => {\n        player.textures.stillDown = [spriteSheet.textures.stillDown]\n        player.textures.stillUp = [spriteSheet.textures.stillUp]\n        player.textures.stillLeft = [spriteSheet.textures.stillLeft]\n        player.textures.stillRight = [spriteSheet.textures.stillRight]\n\n        player.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n        player.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n        player.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n        player.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n        const sprite = new AnimatedSprite(player.textures[`still${upperCase(player.direction)}`])\n\n        sprite.width = SIZE\n        sprite.height = SIZE\n        sprite.animationSpeed = 0.1\n        sprite.x = player.game.app.screen.width / 2 - sprite.width / 2\n        sprite.y = player.game.app.screen.height / 2 - sprite.height / 2\n        player.sprite = sprite\n\n        player.game.app.stage.addChild(sprite)\n      })\n    })\n  }\n\n  addSpriteSheet()\n\n  return player\n}","const SIZE = 16\nconst COLLISION = \"collision\"\nconst ROTATE = \"rotate\"\n\nexport default {\n  0: {\n    name: \"dirt\",\n    x: SIZE * 0,\n    y: SIZE * 0,\n    w: SIZE,\n    h: SIZE,\n  },\n  1: {\n    name: \"grass\",\n    x: SIZE * 2,\n    y: SIZE * 1,\n    w: SIZE,\n    h: SIZE,\n  },\n  2: {\n    name: \"wall\",\n    x: SIZE * 6,\n    y: SIZE * 0,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  3: {\n    name: \"dirt2\",\n    x: SIZE * 0,\n    y: SIZE * 1,\n    w: SIZE,\n    h: SIZE,\n  },\n  4: {\n    name: \"water\",\n    x: SIZE * 9,\n    y: SIZE * 1,\n    w: SIZE,\n    h: SIZE,\n  },\n  5: {\n    name: \"waterTop\",\n    x: SIZE * 9,\n    y: SIZE * 2,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  6: {\n    name: \"waterLeft\",\n    x: SIZE * 10,\n    y: SIZE * 1,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  7: {\n    name: \"waterRight\",\n    x: SIZE * 8,\n    y: SIZE * 1,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  8: {\n    name: \"waterTopLeft\",\n    x: SIZE * 10,\n    y: SIZE * 0,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  9: {\n    name: \"waterTopRight\",\n    x: SIZE * 8,\n    y: SIZE * 0,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  a: {\n    name: \"door\",\n    x: SIZE * 3,\n    y: SIZE * 6,\n    w: SIZE,\n    h: SIZE,\n  },\n  b: {\n    name: \"wallLeft\",\n    x: SIZE * 3,\n    y: SIZE * 11,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  c: {\n    name: \"wall\",\n    x: SIZE * 3,\n    y: SIZE * 7,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  d: {\n    name: \"wallRight\",\n    x: SIZE * 3,\n    y: SIZE * 12,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  e: {\n    name: \"roofLeft\",\n    x: SIZE * 0,\n    y: SIZE * 6,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  f: {\n    name: \"roof\",\n    x: SIZE * 1,\n    y: SIZE * 6,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  g: {\n    name: \"roofRight\",\n    x: SIZE * 2,\n    y: SIZE * 6,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  h: {\n    name: \"roofLeft2\",\n    x: SIZE * 2,\n    y: SIZE * 13,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  i: {\n    name: \"roof2\",\n    x: SIZE * 3,\n    y: SIZE * 13,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n  },\n  j: {\n    name: \"roofRight2\",\n    x: SIZE * 2,\n    y: SIZE * 13,\n    w: SIZE,\n    h: SIZE,\n    [COLLISION]: true,\n    [ROTATE]: true,\n  },\n}","import { Graphics, Loader, Container } from \"pixi.js\"\nimport data from \"images/data/world\"\nimport texture from \"images/world.png\"\nimport { SIZE } from \"libraries/constants\"\n\nexport function createWorld(game) {\n  const world = {\n    game,\n    update,\n    tileAt,\n    location: null,\n    texture: null,\n    map: {},\n    camera: new Container(),\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  function loadTexture() {\n    new Loader().add(\"world\", texture).load((loader, resources) => {\n      world.texture = resources.world.texture\n      loadMapLocation(\"PalletTown\")\n    })\n  }\n\n  async function loadMapLocation(location) {\n    let locationMap = world.map[location]\n\n    if (!locationMap) {\n      const { default: url } = await import(`map/${location}.txt`)\n      const map = await fetch(url).then(response => response.text())\n\n      locationMap = new Container()\n\n      map.split(\"\\n\").forEach((row, i) => row.split(\" \").forEach((value, j) => {\n        const frame = data[value]\n        if (!frame) return\n        const graphics = new Graphics()\n        graphics.name = `${j}-${i}`\n        graphics.collision = frame.collision\n\n        graphics.beginTextureFill({ texture: world.texture })\n        graphics.drawRect(frame.x, frame.y, frame.w, frame.h)\n\n\n        graphics.width = frame.rotate ? -SIZE : SIZE\n        graphics.height = SIZE\n\n        graphics.x = -frame.x * graphics.scale.x + j * SIZE - (frame.rotate ? graphics.width : 0)\n        graphics.y = -frame.y * graphics.scale.y + i * SIZE\n\n        locationMap.addChild(graphics)\n      }))\n\n      world.map[location] = locationMap\n    }\n\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n  }\n\n  function tileAt(x, y) {\n    if (!world.camera.children.length) return\n    return world.camera.getChildAt(0).getChildByName(`${x}-${y}`)\n  }\n\n  loadTexture()\n  game.app.stage.addChildAt(world.camera, 0)\n\n  return world\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS } from \"libraries/constants\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nexport function createGame(view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  const game = {\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n  }\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.player = createPlayer(game)\n  game.world = createWorld(game)\n\n  function handleAction({ detail }) {\n    game.action = detail\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  window.addEventListener(\"action\", handleAction)\n\n  game.app.ticker.add(() => {\n    game.player.update()\n    game.world.update()\n  })\n}"],"sourceRoot":""}