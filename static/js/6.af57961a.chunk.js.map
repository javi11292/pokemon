{"version":3,"sources":["images/data/characters.js","libraries/database.js","images/characters.png","images/world.png","images/data/world.xml","scripts lazy /^/.//.*$/ groupOptions: {} namespace object","maps lazy /^/.//.*/.xml$/ groupOptions: {} namespace object","game/Character.js","game/Player.js","game/World.js","game/index.js"],"names":["CHARACTERS","PLAYER","getFrame","id","x","y","Math","floor","w","h","getData","meta","frames","frame","groupD8","MIRROR_HORIZONTAL","animations","walkDown","walkUp","walkLeft","walkRight","playerDB","localForage","createInstance","name","getEventsDB","storeName","module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","t","keys","Object","STATES","resources","loadingResources","loadResources","a","Loader","add","texture","load","loader","loadedResources","getTextures","spriteSheet","key","data","textures","rotate","createPosition","database","startX","startY","getItem","positionDB","position","newX","setItem","newY","createCharacter","game","container","still","face","walk","update","postUpdate","updateNextTile","updatePosition","updateState","updateTextures","addSpriteSheet","loadEvent","world","events","character","Spritesheet","characters","parse","stillDown","stillUp","stillLeft","stillRight","sprite","AnimatedSprite","state","upperCase","direction","width","SIZE","height","animationSpeed","addChild","play","nextDirection","nextState","dimension","move","speed","SPEED","speedX","speedY","nextX","nextY","nextTile","tileAt","event","toString","CONTROLS","RIGHT","LEFT","DOWN","UP","collision","newPosition","app","ticker","createPlayer","characterUpdateState","player","location","layer","split","setLocation","characterWalk","characterFace","faceTimeout","setTimeout","characterStill","clearTimeout","stage","screen","loadTexture","worldTexture","addGraphic","tileX","tileY","tileSize","graphics","Graphics","beginTextureFill","drawRect","scale","createWorld","tiles","loadMapLocation","newLocation","newLayer","camera","Container","pivot","all","parseData","worldData","enableControls","eventsImport","catch","default","locationMap","locationTiles","locationCharacters","url","parseMap","layers","columns","value","objects","promises","forEach","row","i","j","parseInt","gids","object","promise","push","visible","removeChildren","addChildAt","UPDATE_PRIORITY","INTERACTION","prepareGame","view","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","renderer","plugins","accessibility","destroy","accesibility","createGame","handleAction","detail","action","setMessage","save","loadText","window","addEventListener"],"mappings":"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","file":"static/js/6.af57961a.chunk.js","sourcesContent":["import { groupD8 } from \"pixi.js\"\n\nconst SIZE = 16\nconst COLUMNS = 8\nconst ROTATE = \"rotate\"\n\nexport const CHARACTERS = {\n  PLAYER: 118,\n}\n\nfunction getFrame(id) {\n  return {\n    x: (id % COLUMNS) * SIZE,\n    y: (Math.floor(id / COLUMNS)) * SIZE,\n    w: SIZE,\n    h: SIZE,\n  }\n}\n\nexport function getData(id) {\n  return {\n    meta: {},\n    frames: {\n      [\"stillDown\" + id]: {\n        frame: getFrame(id),\n      },\n      [\"stillUp\" + id]: {\n        frame: getFrame(id + 1),\n      },\n      [\"stillLeft\" + id]: {\n        frame: getFrame(id + 2),\n      },\n      [\"stillRight\" + id]: {\n        frame: getFrame(id + 2),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkDown0\" + id]: {\n        frame: getFrame(id + 3)\n      },\n      [\"walkDown1\" + id]: {\n        frame: getFrame(id + 3),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkUp0\" + id]: {\n        frame: getFrame(id + 4),\n      },\n      [\"walkUp1\" + id]: {\n        frame: getFrame(id + 4),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n\n      [\"walkLeft\" + id]: {\n        frame: getFrame(id + 5),\n      },\n\n      [\"walkRight\" + id]: {\n        frame: getFrame(id + 5),\n        [ROTATE]: groupD8.MIRROR_HORIZONTAL,\n      },\n    },\n\n    animations: {\n      walkDown: [\"walkDown0\" + id, \"stillDown\" + id, \"walkDown1\" + id, \"stillDown\" + id],\n      walkUp: [\"walkUp0\" + id, \"stillUp\" + id, \"walkUp1\" + id, \"stillUp\" + id],\n      walkLeft: [\"walkLeft\" + id, \"stillLeft\" + id],\n      walkRight: [\"walkRight\" + id, \"stillRight\" + id],\n    },\n  }\n}","import localForage from \"localforage\"\nimport { CHARACTERS } from \"images/data/characters\"\n\nexport const playerDB = localForage.createInstance({ name: CHARACTERS.PLAYER })\n\nexport function getEventsDB(storeName) {\n  return localForage.createInstance({ name: \"events\", storeName })\n}","module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","module.exports = __webpack_public_path__ + \"static/media/world.db6fb586.xml\";","var map = {\n\t\"./PalletTown\": [\n\t\t124,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/\": [\n\t\t124,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index\": [\n\t\t124,\n\t\t9,\n\t\t0\n\t],\n\t\"./PalletTown/index.js\": [\n\t\t124,\n\t\t9,\n\t\t0\n\t],\n\t\"./welcome.txt\": [\n\t\t89,\n\t\t7,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 147;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./PalletTown.xml\": [\n\t\t149,\n\t\t7\n\t],\n\t\"./PalletTownRooms.xml\": [\n\t\t150,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 148;\nmodule.exports = webpackAsyncContext;","import { Spritesheet, AnimatedSprite, Loader } from \"pixi.js\"\nimport localForage from \"localforage\"\nimport { getData } from \"images/data/characters\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\n\nexport const STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nlet resources = null\nlet loadingResources = null\n\nasync function loadResources() {\n  return new Promise(resolve => {\n    new Loader().add(\"characters\", texture).load((loader, loadedResources) => {\n      resources = loadedResources\n      resolve()\n    })\n  })\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nasync function createPosition(database, startX, startY) {\n  const positionDB = await await database.getItem(\"position\")\n  let x = positionDB?.x || startX\n  let y = positionDB?.y || startY\n\n  const position = {\n    get x() {\n      return x\n    },\n    set x(newX) {\n      x = newX\n      database.setItem(\"position\", { ...position, x })\n    },\n    get y() {\n      return y\n    },\n    set y(newY) {\n      y = newY\n      database.setItem(\"position\", { ...position, y })\n    }\n  }\n\n  return position\n}\n\nexport async function createCharacter(game, id, container, x, y) {\n  if (!resources && !loadingResources) {\n    loadingResources = await loadResources()\n  }\n\n  const database = localForage.createInstance({ name: id })\n  const position = await createPosition(database, x, y)\n\n  const character = {\n    database,\n    game,\n    still,\n    face,\n    walk,\n    updateState,\n    postUpdate,\n    sprite: null,\n    state: STATES.STILL,\n    direction: CONTROLS.DOWN,\n    speed: { x: 0, y: 0 },\n    nextDirection: null,\n    nextState: null,\n    nextTile: { data: {} },\n    get position() {\n      return position\n    },\n    set position(newPosition) {\n      position.x = newPosition.x\n      position.y = newPosition.y\n    },\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    character.nextState = STATES.STILL\n  }\n\n  function face(direction) {\n    character.nextDirection = direction\n  }\n\n  function walk(direction) {\n    face(direction)\n    character.nextState = STATES.WALK\n  }\n\n  async function update() {\n    const speedX = character.direction === CONTROLS.RIGHT ? 1 : character.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = character.direction === CONTROLS.DOWN ? 1 : character.direction === CONTROLS.UP ? -1 : 0\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y) await updateNextTile(speedX, speedY)\n\n    if (character.state === STATES.WALK && !character.speed.x && !character.speed.y && character.nextTile.data.collision === \"false\") {\n      character.speed.x = speedX\n      character.speed.y = speedY\n      updatePosition(character.speed.x ? \"x\" : \"y\", true)\n    } else if (character.speed.x || character.speed.y) {\n      updatePosition(character.speed.x ? \"x\" : \"y\")\n    } else {\n      updateState()\n    }\n\n    updateTextures()\n    character.postUpdate && character.postUpdate()\n  }\n\n  function postUpdate() {\n    character.sprite.x = position.x\n    character.sprite.y = position.y\n  }\n\n  async function updateNextTile(speedX, speedY) {\n    const nextX = Math.floor(position.x / SIZE + speedX)\n    const nextY = Math.floor(position.y / SIZE + speedY)\n\n    if (character.nextTile.x === nextX && character.nextTile.y === nextY) return\n\n    const data = character.game.world.tileAt(nextX, nextY)\n\n    character.nextTile = {\n      x: nextX,\n      y: nextY,\n      data,\n    }\n\n    if (data.event === id.toString()) await loadEvent(nextX, nextY)\n  }\n\n  function updatePosition(dimension, move) {\n    if (!character.speed[dimension]) return\n\n    const speed = character.speed[dimension] * SPEED\n    const remainder = position[dimension] % SIZE\n\n    if (remainder || move) {\n      position[dimension] += speed\n    } else {\n      character.speed[dimension] = 0\n      character.updateState()\n    }\n  }\n\n  function updateState() {\n    if (character.nextDirection) {\n      character.direction = character.nextDirection\n      character.nextDirection = null\n    }\n    if (character.nextState) {\n      character.state = character.nextState\n      character.nextState = null\n    }\n  }\n\n  function updateTextures() {\n    if (!character.sprite) return\n    const textures = character.textures[character.state + upperCase(character.direction)]\n    if (!textures || character.sprite.textures === textures) return\n    character.sprite.textures = textures\n    character.sprite.play()\n  }\n\n  function addSpriteSheet() {\n    const spriteSheet = new Spritesheet(resources.characters.texture, getData(id))\n\n    spriteSheet.parse(() => {\n      character.textures.stillDown = [spriteSheet.textures[\"stillDown\" + id]]\n      character.textures.stillUp = [spriteSheet.textures[\"stillUp\" + id]]\n      character.textures.stillLeft = [spriteSheet.textures[\"stillLeft\" + id]]\n      character.textures.stillRight = [spriteSheet.textures[\"stillRight\" + id]]\n\n      character.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n      character.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n      character.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n      character.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n      const sprite = new AnimatedSprite(character.textures[character.state + upperCase(character.direction)])\n\n      sprite.width = SIZE\n      sprite.height = SIZE\n      sprite.animationSpeed = 0.1\n      sprite.x = x\n      sprite.y = y\n      character.sprite = sprite\n\n      container.addChild(sprite)\n    })\n  }\n\n  async function loadEvent(x, y) {\n    await game.world.events[id][`${x}-${y}`](character.game)\n  }\n\n  addSpriteSheet()\n\n  character.game.app.ticker.add(update)\n\n  return character\n}","import { CHARACTERS } from \"images/data/characters\"\nimport { SIZE } from \"libraries/constants\"\nimport { createCharacter, STATES } from \"./Character\"\n\nexport async function createPlayer(game) {\n  const player = await createCharacter(\n    game,\n    CHARACTERS.PLAYER,\n    game.app.stage,\n    game.app.screen.width / 2 - SIZE / 2,\n    game.app.screen.height / 2 - SIZE / 2)\n\n  const {\n    walk: characterWalk,\n    face: characterFace,\n    still: characterStill,\n    updateState: characterUpdateState,\n  } = player\n  player.still = still\n  player.face = face\n  player.walk = walk\n  player.updateState = updateState\n  player.postUpdate = null\n\n  let faceTimeout = null\n\n  function still() {\n    characterStill()\n    clearTimeout(faceTimeout)\n  }\n\n  function face(direction) {\n    characterFace(direction)\n    faceTimeout = setTimeout(() => walk(direction), 50)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) face(direction)\n    else characterWalk(direction)\n  }\n\n  function updateState() {\n    characterUpdateState()\n    const { data } = player.nextTile\n    if (data.location || data.layer) {\n      const [x, y] = data.position.split(\",\")\n      game.world.setLocation(data.location, data.layer, { x: x * SIZE, y: y * SIZE })\n    }\n  }\n\n  return player\n}","import { Graphics, Loader, Container, UPDATE_PRIORITY } from \"pixi.js\"\nimport worldTexture from \"images/world.png\"\nimport worldData from \"images/data/world.xml\"\nimport { SIZE } from \"libraries/constants\"\nimport { parseData, parseMap } from \"libraries/util\"\nimport { playerDB } from \"libraries/database\"\nimport { createCharacter } from \"./Character\"\n\nfunction loadTexture() {\n  return new Promise(resolve => {\n    new Loader().add(\"world\", worldTexture).load((loader, resources) => {\n      resolve(resources.world.texture)\n    })\n  })\n}\n\nfunction addGraphic({ texture, map, tileX, tileY, x, y, tileSize }) {\n  const graphics = new Graphics()\n\n  graphics.beginTextureFill({ texture })\n  graphics.drawRect(tileX, tileY, tileSize, tileSize)\n\n  graphics.width = SIZE\n  graphics.height = SIZE\n\n  graphics.x = -tileX * graphics.scale.x + x * SIZE\n  graphics.y = -tileY * graphics.scale.y + y * SIZE\n\n  map.addChild(graphics)\n}\n\nexport function createWorld(game) {\n  let location = null\n  let layer = null\n\n  const world = {\n    game,\n    update,\n    tileAt,\n    setLocation,\n    load,\n    events: null,\n    get location() {\n      return location\n    },\n    set location(newLocation) {\n      location = newLocation\n      playerDB.setItem(\"location\", newLocation)\n    },\n    get layer() {\n      return layer\n    },\n    set layer(newLayer) {\n      layer = newLayer\n      playerDB.setItem(\"layer\", newLayer)\n    },\n    texture: null,\n    data: null,\n    map: {},\n    tiles: {},\n    characters: {},\n    camera: new Container(),\n  }\n\n  function setLocation(location, layer, position) {\n    world.location = location || world.location\n    world.layer = layer || \"index\"\n    playerDB.setItem(\"location\", world.location)\n    playerDB.setItem(\"layer\", world.layer)\n    loadMapLocation(position)\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  async function load() {\n    const [texture, data] = await Promise.all([loadTexture(), parseData(worldData)])\n    world.texture = texture\n    world.data = data\n    await loadMapLocation()\n    world.game.enableControls = true\n  }\n\n  async function loadMapLocation(position) {\n    const eventsImport = import(`scripts/${world.location}/${world.layer}`).catch(() => ({ default: {} }))\n    const { location, layer } = world\n    let locationMap = world.map[location + layer]\n    let locationTiles = world.tiles[location + layer]\n    let locationCharacters = world.characters[location + layer]\n\n    if (!locationMap) {\n      locationMap = new Container()\n      locationTiles = {}\n      locationCharacters = []\n\n      const { default: url } = await import(`maps/${location}.xml`)\n      const layers = await parseMap(url)\n      const { tileSize, columns } = world.data\n      const { value: map, objects, } = layers[layer]\n      const promises = []\n\n      map.split(\"\\n\").forEach((row, i) => row.split(\",\").forEach((value, j) => {\n        if (!value || value === \"0\") return\n\n        const id = parseInt(value, 10) - layers.gids.world\n        const object = world.data[id] || {}\n        const tileX = (id % columns) * tileSize\n        const tileY = Math.floor(id / columns) * tileSize\n\n        locationTiles[`${j}-${i}`] = object\n\n        addGraphic({\n          texture: world.texture,\n          map: locationMap,\n          tileX,\n          tileY,\n          x: j,\n          y: i,\n          tileSize,\n        })\n      }))\n\n      objects.forEach(async object => {\n        if (!layers.gids.characters || object.id < layers.gids.characters) {\n          const id = object.id - layers.gids.world\n          const tileX = (id % columns) * tileSize\n          const tileY = Math.floor(id / columns) * tileSize\n\n          locationTiles[`${object.x / tileSize}-${object.y / tileSize}`] = { ...(world.data[id] || {}), ...object }\n\n          addGraphic({\n            texture: world.texture,\n            map: locationMap,\n            tileX,\n            tileY,\n            x: object.x / tileSize,\n            y: object.y / tileSize,\n            tileSize,\n          })\n        } else {\n          const id = object.id - layers.gids.characters\n          const promise = createCharacter(world.game, id, locationMap, SIZE * object.x / tileSize, SIZE * object.y / tileSize)\n          promises.push(promise)\n\n          const character = await promise\n          locationCharacters.push(character)\n\n          character.sprite.visible = object.visible !== \"false\"\n        }\n\n      })\n\n      await Promise.all(promises)\n\n      world.map[location + layer] = locationMap\n      world.tiles[location + layer] = locationTiles\n      world.characters[location + layer] = locationCharacters\n    }\n\n    const { default: events } = await eventsImport\n\n    world.events = events\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n    if (position) world.game.player.position = position\n  }\n\n  function tileAt(x, y) {\n    if (!world.tiles[location + layer]) return {}\n    return world.tiles[location + layer][`${x}-${y}`] || {}\n  }\n\n  game.app.stage.addChildAt(world.camera, 0)\n\n  game.app.ticker.add(update, null, UPDATE_PRIORITY.INTERACTION)\n\n  return world\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS, SIZE } from \"libraries/constants\"\nimport { playerDB } from \"libraries/database\"\nimport { loadText } from \"libraries/util\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nasync function prepareGame(game, view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.app.renderer.plugins.accessibility.destroy()\n  delete game.app.renderer.plugins.accesibility\n\n  game.player = await createPlayer(game)\n  game.world = createWorld(game)\n}\n\nexport async function createGame({ view, setMessage }) {\n  const game = {\n    setMessage,\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n    enableControls: false,\n  }\n\n  const save = {\n    position: await playerDB.getItem(\"position\"),\n    location: await playerDB.getItem(\"location\"),\n    layer: await playerDB.getItem(\"layer\"),\n  }\n\n  await prepareGame(game, view)\n\n  if (!save.position) {\n    loadText(\"welcome\", setMessage)\n    game.player.position = { x: SIZE * 3, y: SIZE * 6 }\n    game.world.location = \"PalletTownRooms\"\n    game.world.layer = \"house1 f2\"\n  } else {\n    game.world.location = save.location\n    game.world.layer = save.layer\n  }\n\n  game.world.load()\n\n  function handleAction({ detail }) {\n    if (!game.enableControls) return\n    game.action = detail\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  window.addEventListener(\"action\", handleAction)\n}"],"sourceRoot":""}