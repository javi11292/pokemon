{"version":3,"sources":["images/characters.png","images/world.png","map lazy /^/.//.*/.txt$/ groupOptions: {} namespace object","images/data/player.js","game/Player.js","images/data/world.js","game/World.js","game/index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","meta","frames","stillDown","frame","x","WIDTH","y","HEIGHT","w","h","walkDown0","walkDown1","rotate","groupD8","MIRROR_HORIZONTAL","stillUp","walkUp0","walkUp1","stillLeft","walkLeft","stillRight","walkRight","animations","walkDown","walkUp","STATES","getTextures","spriteSheet","key","data","texture","textures","createPlayer","game","player","update","speedX","direction","CONTROLS","RIGHT","LEFT","speedY","DOWN","UP","state","speed","nextX","Math","floor","position","SIZE","nextY","remainderX","remainderY","collision","tile","world","tileAt","hasWorldCollision","updatePosition","updateDirection","sprite","upperCase","play","setTextures","still","walk","nextDirection","setTimeout","action","face","dimension","move","SPEED","remainder","abs","offset","normalizedOffset","Loader","add","load","loader","resources","Spritesheet","characters","parse","AnimatedSprite","width","height","animationSpeed","app","screen","stage","addChild","0","name","1","2","3","createWorld","camera","pivot","children","length","getChildAt","getChildByName","location","Container","a","locationMap","url","default","fetch","response","text","split","forEach","row","i","value","j","graphics","Graphics","beginTextureFill","drawRect","scale","removeChildren","loadMapLocation","addChildAt","createGame","view","utils","skipHello","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","window","addEventListener","detail","ticker"],"mappings":"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","file":"static/js/4.8d265253.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/characters.111f6faf.png\";","module.exports = __webpack_public_path__ + \"static/media/world.74af39e9.png\";","var map = {\n\t\"./PalletTown.txt\": [\n\t\t129,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 128;\nmodule.exports = webpackAsyncContext;","import { groupD8 } from \"pixi.js\"\n\nconst WIDTH = 16\nconst HEIGHT = 16\n\nexport default {\n  meta: {},\n  frames: {\n    stillDown: {\n      frame: {\n        x: WIDTH * 6,\n        y: HEIGHT * 14,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n    },\n    walkDown0: {\n      frame: {\n        x: WIDTH * 1,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n    },\n    walkDown1: {\n      frame: {\n        x: WIDTH * 1,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n      rotate: groupD8.MIRROR_HORIZONTAL,\n    },\n\n    stillUp: {\n      frame: {\n        x: WIDTH * 7,\n        y: HEIGHT * 14,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n    },\n    walkUp0: {\n      frame: {\n        x: WIDTH * 2,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n    },\n    walkUp1: {\n      frame: {\n        x: WIDTH * 2,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n      rotate: groupD8.MIRROR_HORIZONTAL,\n    },\n\n\n    stillLeft: {\n      frame: {\n        x: WIDTH * 0,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n    },\n    walkLeft: {\n      frame: {\n        x: WIDTH * 3,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n    },\n\n    stillRight: {\n      frame: {\n        x: WIDTH * 0,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n      rotate: groupD8.MIRROR_HORIZONTAL,\n    },\n    walkRight: {\n      frame: {\n        x: WIDTH * 3,\n        y: HEIGHT * 15,\n        w: WIDTH,\n        h: HEIGHT,\n      },\n      rotate: groupD8.MIRROR_HORIZONTAL,\n    },\n  },\n  animations: {\n    walkDown: [\"walkDown0\", \"stillDown\", \"walkDown1\", \"stillDown\"],\n    walkUp: [\"walkUp0\", \"stillUp\", \"walkUp1\", \"stillUp\"],\n    walkLeft: [\"walkLeft\", \"stillLeft\"],\n    walkRight: [\"walkRight\", \"stillRight\"],\n  },\n}","import { Spritesheet, AnimatedSprite, Loader } from \"pixi.js\"\nimport data from \"images/data/player\"\nimport texture from \"images/characters.png\"\nimport { upperCase } from \"libraries/util\"\nimport { CONTROLS, SIZE, SPEED } from \"libraries/constants\"\n\nconst STATES = {\n  STILL: \"still\",\n  WALK: \"walk\",\n}\n\nfunction getTextures(spriteSheet, key) {\n  return spriteSheet.data.animations[key].map(id => {\n    const texture = spriteSheet.textures[id]\n    texture.rotate = spriteSheet.data.frames[id].rotate ?? texture.rotate\n    return texture\n  })\n}\n\nexport function createPlayer(game) {\n  const player = {\n    game,\n    update,\n    still,\n    walk,\n    sprite: null,\n    state: null,\n    direction: CONTROLS.DOWN,\n    nextDirection: null,\n    position: { x: SIZE * 10, y: SIZE * 3 },\n    speed: { x: 0, y: 0 },\n    collision: null,\n    textures: {\n      stillDown: [],\n      stillUp: [],\n      stillLeft: [],\n      stillRight: [],\n      walkDown: [],\n      walkUp: [],\n      walkLeft: [],\n      walkRight: [],\n    },\n  }\n\n  function still() {\n    player.state = STATES.STILL\n  }\n\n  function face(direction) {\n    setTimeout(() => {\n      player.direction = direction\n      if (direction === player.game.action) walk(direction)\n      else still()\n    }, 100)\n  }\n\n  function walk(direction) {\n    if (player.direction !== direction && player.state !== STATES.WALK) {\n      face(direction)\n      return\n    }\n\n    player.nextDirection = direction\n    player.state = STATES.WALK\n  }\n\n  function setTextures() {\n    if (!player.sprite) return\n    const textures = player.textures[player.state + upperCase(player.direction)]\n    if (!textures || player.sprite.textures === textures) return\n    player.sprite.textures = textures\n    player.sprite.play()\n  }\n\n  function updateDirection() {\n    if (player.nextDirection) {\n      player.direction = player.nextDirection\n      player.nextDirection = null\n    }\n  }\n\n  function updatePosition(dimension, move) {\n    if (!player.speed[dimension]) return\n\n    const speed = player.speed[dimension] * SPEED\n    const remainder = Math.abs(player.position[dimension] % SIZE)\n\n    const offset = remainder && (player.speed[dimension] === 1 ? remainder : SIZE - remainder)\n\n    if (remainder) {\n      const normalizedOffset = player.position[dimension] <= 0 ? offset : SIZE - offset\n      player.position[dimension] += normalizedOffset >= SPEED ? speed : normalizedOffset * player.speed[dimension]\n    } else if (move) {\n      player.position[dimension] += speed\n    } else {\n      player.speed[dimension] = 0\n      updateDirection()\n    }\n  }\n\n  function hasWorldCollision(speedX, speedY) {\n    const nextX = Math.floor(player.position.x / SIZE + speedX)\n    const nextY = Math.floor(player.position.y / SIZE + speedY)\n    const remainderX = player.position.x % SIZE\n    const remainderY = player.position.y % SIZE\n\n    if (remainderX || remainderY) return !!player.collision\n\n    if (!player.collision || nextX !== player.collision.x || nextY !== player.collision.y) {\n      const tile = player.game.world.tileAt(nextX, nextY)\n      if (!tile || tile.collision) {\n        player.collision = {\n          x: nextX,\n          y: nextY,\n        }\n      } else {\n        player.collision = null\n      }\n    }\n\n    return !!player.collision\n  }\n\n  function update() {\n    const speedX = player.direction === CONTROLS.RIGHT ? 1 : player.direction === CONTROLS.LEFT ? -1 : 0\n    const speedY = player.direction === CONTROLS.DOWN ? 1 : player.direction === CONTROLS.UP ? -1 : 0\n\n    if (player.state === STATES.WALK && !player.speed.x && !player.speed.y && !hasWorldCollision(speedX, speedY)) {\n      player.speed.x = speedX\n      player.speed.y = speedY\n      updatePosition(player.speed.x ? \"x\" : \"y\", true)\n    } else if (player.speed.x || player.speed.y) {\n      updatePosition(player.speed.x ? \"x\" : \"y\")\n    } else {\n      updateDirection()\n    }\n\n    setTextures()\n  }\n\n  function addSpriteSheet() {\n    new Loader().add(\"characters\", texture).load((loader, resources) => {\n      const spriteSheet = new Spritesheet(resources.characters.texture, data)\n\n      spriteSheet.parse(() => {\n        player.textures.stillDown = [spriteSheet.textures.stillDown]\n        player.textures.stillUp = [spriteSheet.textures.stillUp]\n        player.textures.stillLeft = [spriteSheet.textures.stillLeft]\n        player.textures.stillRight = [spriteSheet.textures.stillRight]\n\n        player.textures.walkDown = getTextures(spriteSheet, \"walkDown\")\n        player.textures.walkUp = getTextures(spriteSheet, \"walkUp\")\n        player.textures.walkLeft = getTextures(spriteSheet, \"walkLeft\")\n        player.textures.walkRight = getTextures(spriteSheet, \"walkRight\")\n\n        const sprite = new AnimatedSprite(player.textures[`still${upperCase(player.direction)}`])\n\n        sprite.width = SIZE\n        sprite.height = SIZE\n        sprite.animationSpeed = 0.1\n        sprite.x = player.game.app.screen.width / 2 - sprite.width / 2\n        sprite.y = player.game.app.screen.height / 2 - sprite.height / 2\n        player.sprite = sprite\n\n        player.game.app.stage.addChild(sprite)\n      })\n    })\n  }\n\n  addSpriteSheet()\n\n  return player\n}","const WIDTH = 16\nconst HEIGHT = 16\n\nexport default {\n  0: {\n    name: \"dirt\",\n    x: WIDTH * 0,\n    y: HEIGHT * 0,\n    w: WIDTH,\n    h: HEIGHT,\n  },\n  1: {\n    name: \"grass\",\n    x: WIDTH * 2,\n    y: HEIGHT * 1,\n    w: WIDTH,\n    h: HEIGHT,\n  },\n  2: {\n    name: \"wall\",\n    x: WIDTH * 6,\n    y: HEIGHT * 0,\n    w: WIDTH,\n    h: HEIGHT,\n    collision: true,\n  },\n  3: {\n    name: \"dirt2\",\n    x: WIDTH * 0,\n    y: HEIGHT * 1,\n    w: WIDTH,\n    h: HEIGHT,\n  },\n}","import { Graphics, Loader, Container } from \"pixi.js\"\nimport data from \"images/data/world\"\nimport texture from \"images/world.png\"\nimport { SIZE } from \"libraries/constants\"\n\nexport function createWorld(game) {\n  const world = {\n    game,\n    update,\n    tileAt,\n    location: null,\n    texture: null,\n    map: {},\n    camera: new Container(),\n  }\n\n  function update() {\n    const position = world.game.player.position\n    world.camera.pivot.x = -world.game.player.sprite?.x\n    world.camera.pivot.y = -world.game.player.sprite?.y\n    world.camera.position.x = -position.x\n    world.camera.position.y = -position.y\n  }\n\n  function loadTexture() {\n    new Loader().add(\"world\", texture).load((loader, resources) => {\n      world.texture = resources.world.texture\n      loadMapLocation(\"PalletTown\")\n    })\n  }\n\n  async function loadMapLocation(location) {\n    let locationMap = world.map[location]\n\n    if (!locationMap) {\n      const { default: url } = await import(`map/${location}.txt`)\n      const map = await fetch(url).then(response => response.text())\n\n      locationMap = new Container()\n\n      map.split(\"\\n\").forEach((row, i) => row.split(\" \").forEach((value, j) => {\n        const frame = data[value]\n        if (!frame) return\n        const graphics = new Graphics()\n        graphics.name = `${j}-${i}`\n        graphics.collision = frame.collision\n\n        graphics.beginTextureFill({ texture: world.texture })\n        graphics.drawRect(frame.x, frame.y, frame.w, frame.h)\n\n        graphics.width = SIZE\n        graphics.height = SIZE\n        graphics.x = -frame.x * graphics.scale.x + j * SIZE\n        graphics.y = -frame.y * graphics.scale.y + i * SIZE\n\n        locationMap.addChild(graphics)\n      }))\n\n      world.map[location] = locationMap\n    }\n\n    world.camera.removeChildren()\n    world.camera.addChild(locationMap)\n  }\n\n  function tileAt(x, y) {\n    if (!world.camera.children.length) return\n    return world.camera.getChildAt(0).getChildByName(`${x}-${y}`)\n  }\n\n  loadTexture()\n  game.app.stage.addChildAt(world.camera, 0)\n\n  return world\n}","import { Application, utils, settings, SCALE_MODES } from \"pixi.js\"\nimport { CONTROLS } from \"libraries/constants\"\nimport { createPlayer } from \"./Player\"\nimport { createWorld } from \"./World\"\n\nexport function createGame(view) {\n  utils.skipHello()\n  settings.SCALE_MODE = SCALE_MODES.NEAREST\n\n  const game = {\n    app: null,\n    action: null,\n    player: null,\n    world: null,\n  }\n\n  game.app = new Application({\n    view,\n    width: 1920,\n    height: 1080,\n  })\n\n  game.player = createPlayer(game)\n  game.world = createWorld(game)\n\n  function handleAction({ detail }) {\n    game.action = detail\n\n    switch (game.action) {\n      case CONTROLS.UP:\n      case CONTROLS.LEFT:\n      case CONTROLS.RIGHT:\n      case CONTROLS.DOWN: {\n        game.player.walk(game.action)\n        break\n      }\n\n      default: {\n        game.player.still()\n      }\n    }\n  }\n\n  window.addEventListener(\"action\", handleAction)\n\n  game.app.ticker.add(() => {\n    game.player.update()\n    game.world.update()\n  })\n}"],"sourceRoot":""}